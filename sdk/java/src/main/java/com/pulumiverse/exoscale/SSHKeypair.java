// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumiverse.exoscale;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumiverse.exoscale.SSHKeypairArgs;
import com.pulumiverse.exoscale.Utilities;
import com.pulumiverse.exoscale.inputs.SSHKeypairState;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="exoscale:index/sSHKeypair:SSHKeypair")
public class SSHKeypair extends com.pulumi.resources.CustomResource {
    /**
     * The SSH keypair unique identifier.
     * 
     */
    @Export(name="fingerprint", type=String.class, parameters={})
    private Output<String> fingerprint;

    /**
     * @return The SSH keypair unique identifier.
     * 
     */
    public Output<String> fingerprint() {
        return this.fingerprint;
    }
    /**
     * The SSH keypair name.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The SSH keypair name.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The SSH *private* key generated if no public key was provided.
     * 
     */
    @Export(name="privateKey", type=String.class, parameters={})
    private Output<String> privateKey;

    /**
     * @return The SSH *private* key generated if no public key was provided.
     * 
     */
    public Output<String> privateKey() {
        return this.privateKey;
    }
    /**
     * A SSH *public* key that will be authorized in compute instances. If not provided, an SSH keypair (including the *private* key) is generated and saved locally (see the `private_key` attribute).
     * 
     */
    @Export(name="publicKey", type=String.class, parameters={})
    private Output</* @Nullable */ String> publicKey;

    /**
     * @return A SSH *public* key that will be authorized in compute instances. If not provided, an SSH keypair (including the *private* key) is generated and saved locally (see the `private_key` attribute).
     * 
     */
    public Output<Optional<String>> publicKey() {
        return Codegen.optional(this.publicKey);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SSHKeypair(String name) {
        this(name, SSHKeypairArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SSHKeypair(String name, @Nullable SSHKeypairArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SSHKeypair(String name, @Nullable SSHKeypairArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("exoscale:index/sSHKeypair:SSHKeypair", name, args == null ? SSHKeypairArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private SSHKeypair(String name, Output<String> id, @Nullable SSHKeypairState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("exoscale:index/sSHKeypair:SSHKeypair", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "privateKey"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SSHKeypair get(String name, Output<String> id, @Nullable SSHKeypairState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new SSHKeypair(name, id, state, options);
    }
}
