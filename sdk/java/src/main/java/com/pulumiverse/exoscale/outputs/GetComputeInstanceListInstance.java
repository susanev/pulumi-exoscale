// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumiverse.exoscale.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetComputeInstanceListInstance {
    private @Nullable List<String> antiAffinityGroupIds;
    private String createdAt;
    private String deployTargetId;
    private Integer diskSize;
    private List<String> elasticIpIds;
    private @Nullable String id;
    private Boolean ipv6;
    private String ipv6Address;
    private @Nullable Map<String,String> labels;
    private String managerId;
    private String managerType;
    private @Nullable String name;
    private List<String> privateNetworkIds;
    private String publicIpAddress;
    private List<String> securityGroupIds;
    private String sshKey;
    private String state;
    private String templateId;
    private String type;
    private String userData;
    /**
     * @return The Exoscale [Zone][zone] name.
     * 
     */
    private String zone;

    private GetComputeInstanceListInstance() {}
    public List<String> antiAffinityGroupIds() {
        return this.antiAffinityGroupIds == null ? List.of() : this.antiAffinityGroupIds;
    }
    public String createdAt() {
        return this.createdAt;
    }
    public String deployTargetId() {
        return this.deployTargetId;
    }
    public Integer diskSize() {
        return this.diskSize;
    }
    public List<String> elasticIpIds() {
        return this.elasticIpIds;
    }
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public Boolean ipv6() {
        return this.ipv6;
    }
    public String ipv6Address() {
        return this.ipv6Address;
    }
    public Map<String,String> labels() {
        return this.labels == null ? Map.of() : this.labels;
    }
    public String managerId() {
        return this.managerId;
    }
    public String managerType() {
        return this.managerType;
    }
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public List<String> privateNetworkIds() {
        return this.privateNetworkIds;
    }
    public String publicIpAddress() {
        return this.publicIpAddress;
    }
    public List<String> securityGroupIds() {
        return this.securityGroupIds;
    }
    public String sshKey() {
        return this.sshKey;
    }
    public String state() {
        return this.state;
    }
    public String templateId() {
        return this.templateId;
    }
    public String type() {
        return this.type;
    }
    public String userData() {
        return this.userData;
    }
    /**
     * @return The Exoscale [Zone][zone] name.
     * 
     */
    public String zone() {
        return this.zone;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetComputeInstanceListInstance defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> antiAffinityGroupIds;
        private String createdAt;
        private String deployTargetId;
        private Integer diskSize;
        private List<String> elasticIpIds;
        private @Nullable String id;
        private Boolean ipv6;
        private String ipv6Address;
        private @Nullable Map<String,String> labels;
        private String managerId;
        private String managerType;
        private @Nullable String name;
        private List<String> privateNetworkIds;
        private String publicIpAddress;
        private List<String> securityGroupIds;
        private String sshKey;
        private String state;
        private String templateId;
        private String type;
        private String userData;
        private String zone;
        public Builder() {}
        public Builder(GetComputeInstanceListInstance defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.antiAffinityGroupIds = defaults.antiAffinityGroupIds;
    	      this.createdAt = defaults.createdAt;
    	      this.deployTargetId = defaults.deployTargetId;
    	      this.diskSize = defaults.diskSize;
    	      this.elasticIpIds = defaults.elasticIpIds;
    	      this.id = defaults.id;
    	      this.ipv6 = defaults.ipv6;
    	      this.ipv6Address = defaults.ipv6Address;
    	      this.labels = defaults.labels;
    	      this.managerId = defaults.managerId;
    	      this.managerType = defaults.managerType;
    	      this.name = defaults.name;
    	      this.privateNetworkIds = defaults.privateNetworkIds;
    	      this.publicIpAddress = defaults.publicIpAddress;
    	      this.securityGroupIds = defaults.securityGroupIds;
    	      this.sshKey = defaults.sshKey;
    	      this.state = defaults.state;
    	      this.templateId = defaults.templateId;
    	      this.type = defaults.type;
    	      this.userData = defaults.userData;
    	      this.zone = defaults.zone;
        }

        @CustomType.Setter
        public Builder antiAffinityGroupIds(@Nullable List<String> antiAffinityGroupIds) {
            this.antiAffinityGroupIds = antiAffinityGroupIds;
            return this;
        }
        public Builder antiAffinityGroupIds(String... antiAffinityGroupIds) {
            return antiAffinityGroupIds(List.of(antiAffinityGroupIds));
        }
        @CustomType.Setter
        public Builder createdAt(String createdAt) {
            this.createdAt = Objects.requireNonNull(createdAt);
            return this;
        }
        @CustomType.Setter
        public Builder deployTargetId(String deployTargetId) {
            this.deployTargetId = Objects.requireNonNull(deployTargetId);
            return this;
        }
        @CustomType.Setter
        public Builder diskSize(Integer diskSize) {
            this.diskSize = Objects.requireNonNull(diskSize);
            return this;
        }
        @CustomType.Setter
        public Builder elasticIpIds(List<String> elasticIpIds) {
            this.elasticIpIds = Objects.requireNonNull(elasticIpIds);
            return this;
        }
        public Builder elasticIpIds(String... elasticIpIds) {
            return elasticIpIds(List.of(elasticIpIds));
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6(Boolean ipv6) {
            this.ipv6 = Objects.requireNonNull(ipv6);
            return this;
        }
        @CustomType.Setter
        public Builder ipv6Address(String ipv6Address) {
            this.ipv6Address = Objects.requireNonNull(ipv6Address);
            return this;
        }
        @CustomType.Setter
        public Builder labels(@Nullable Map<String,String> labels) {
            this.labels = labels;
            return this;
        }
        @CustomType.Setter
        public Builder managerId(String managerId) {
            this.managerId = Objects.requireNonNull(managerId);
            return this;
        }
        @CustomType.Setter
        public Builder managerType(String managerType) {
            this.managerType = Objects.requireNonNull(managerType);
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder privateNetworkIds(List<String> privateNetworkIds) {
            this.privateNetworkIds = Objects.requireNonNull(privateNetworkIds);
            return this;
        }
        public Builder privateNetworkIds(String... privateNetworkIds) {
            return privateNetworkIds(List.of(privateNetworkIds));
        }
        @CustomType.Setter
        public Builder publicIpAddress(String publicIpAddress) {
            this.publicIpAddress = Objects.requireNonNull(publicIpAddress);
            return this;
        }
        @CustomType.Setter
        public Builder securityGroupIds(List<String> securityGroupIds) {
            this.securityGroupIds = Objects.requireNonNull(securityGroupIds);
            return this;
        }
        public Builder securityGroupIds(String... securityGroupIds) {
            return securityGroupIds(List.of(securityGroupIds));
        }
        @CustomType.Setter
        public Builder sshKey(String sshKey) {
            this.sshKey = Objects.requireNonNull(sshKey);
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder templateId(String templateId) {
            this.templateId = Objects.requireNonNull(templateId);
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder userData(String userData) {
            this.userData = Objects.requireNonNull(userData);
            return this;
        }
        @CustomType.Setter
        public Builder zone(String zone) {
            this.zone = Objects.requireNonNull(zone);
            return this;
        }
        public GetComputeInstanceListInstance build() {
            final var o = new GetComputeInstanceListInstance();
            o.antiAffinityGroupIds = antiAffinityGroupIds;
            o.createdAt = createdAt;
            o.deployTargetId = deployTargetId;
            o.diskSize = diskSize;
            o.elasticIpIds = elasticIpIds;
            o.id = id;
            o.ipv6 = ipv6;
            o.ipv6Address = ipv6Address;
            o.labels = labels;
            o.managerId = managerId;
            o.managerType = managerType;
            o.name = name;
            o.privateNetworkIds = privateNetworkIds;
            o.publicIpAddress = publicIpAddress;
            o.securityGroupIds = securityGroupIds;
            o.sshKey = sshKey;
            o.state = state;
            o.templateId = templateId;
            o.type = type;
            o.userData = userData;
            o.zone = zone;
            return o;
        }
    }
}
