// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumiverse.exoscale;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumiverse.exoscale.inputs.InstancePoolInstanceArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstancePoolArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstancePoolArgs Empty = new InstancePoolArgs();

    /**
     * A list of exoscale.AntiAffinityGroup (IDs; may only be set at creation time).
     * 
     */
    @Import(name="affinityGroupIds")
    private @Nullable Output<List<String>> affinityGroupIds;

    /**
     * @return A list of exoscale.AntiAffinityGroup (IDs; may only be set at creation time).
     * 
     */
    public Optional<Output<List<String>>> affinityGroupIds() {
        return Optional.ofNullable(this.affinityGroupIds);
    }

    /**
     * A deploy target ID.
     * 
     */
    @Import(name="deployTargetId")
    private @Nullable Output<String> deployTargetId;

    /**
     * @return A deploy target ID.
     * 
     */
    public Optional<Output<String>> deployTargetId() {
        return Optional.ofNullable(this.deployTargetId);
    }

    /**
     * A free-form text describing the pool.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return A free-form text describing the pool.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The managed instances disk size (GiB).
     * 
     */
    @Import(name="diskSize")
    private @Nullable Output<Integer> diskSize;

    /**
     * @return The managed instances disk size (GiB).
     * 
     */
    public Optional<Output<Integer>> diskSize() {
        return Optional.ofNullable(this.diskSize);
    }

    /**
     * A list of exoscale.ElasticIP (IDs).
     * 
     */
    @Import(name="elasticIpIds")
    private @Nullable Output<List<String>> elasticIpIds;

    /**
     * @return A list of exoscale.ElasticIP (IDs).
     * 
     */
    public Optional<Output<List<String>>> elasticIpIds() {
        return Optional.ofNullable(this.elasticIpIds);
    }

    /**
     * The string used to prefix managed instances name (default: `pool`).
     * 
     */
    @Import(name="instancePrefix")
    private @Nullable Output<String> instancePrefix;

    /**
     * @return The string used to prefix managed instances name (default: `pool`).
     * 
     */
    public Optional<Output<String>> instancePrefix() {
        return Optional.ofNullable(this.instancePrefix);
    }

    /**
     * The managed compute instances type (`&lt;family&gt;.&lt;size&gt;`, e.g. `standard.medium`; use the [Exoscale CLI][cli] - `exo compute instance-type list` - for the list of available types).
     * 
     */
    @Import(name="instanceType")
    private @Nullable Output<String> instanceType;

    /**
     * @return The managed compute instances type (`&lt;family&gt;.&lt;size&gt;`, e.g. `standard.medium`; use the [Exoscale CLI][cli] - `exo compute instance-type list` - for the list of available types).
     * 
     */
    public Optional<Output<String>> instanceType() {
        return Optional.ofNullable(this.instanceType);
    }

    /**
     * The list of managed instances. Structure is documented below.
     * 
     */
    @Import(name="instances")
    private @Nullable Output<List<InstancePoolInstanceArgs>> instances;

    /**
     * @return The list of managed instances. Structure is documented below.
     * 
     */
    public Optional<Output<List<InstancePoolInstanceArgs>>> instances() {
        return Optional.ofNullable(this.instances);
    }

    /**
     * Enable IPv6 on managed instances (boolean; default: `false`).
     * 
     */
    @Import(name="ipv6")
    private @Nullable Output<Boolean> ipv6;

    /**
     * @return Enable IPv6 on managed instances (boolean; default: `false`).
     * 
     */
    public Optional<Output<Boolean>> ipv6() {
        return Optional.ofNullable(this.ipv6);
    }

    /**
     * The exoscale.SSHKey (name) to authorize in the managed instances.
     * 
     */
    @Import(name="keyPair")
    private @Nullable Output<String> keyPair;

    /**
     * @return The exoscale.SSHKey (name) to authorize in the managed instances.
     * 
     */
    public Optional<Output<String>> keyPair() {
        return Optional.ofNullable(this.keyPair);
    }

    /**
     * A map of key/value labels.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,String>> labels;

    /**
     * @return A map of key/value labels.
     * 
     */
    public Optional<Output<Map<String,String>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * The instance pool name.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The instance pool name.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * A list of exoscale.PrivateNetwork (IDs).
     * 
     */
    @Import(name="networkIds")
    private @Nullable Output<List<String>> networkIds;

    /**
     * @return A list of exoscale.PrivateNetwork (IDs).
     * 
     */
    public Optional<Output<List<String>>> networkIds() {
        return Optional.ofNullable(this.networkIds);
    }

    /**
     * A list of exoscale.SecurityGroup (IDs).
     * 
     */
    @Import(name="securityGroupIds")
    private @Nullable Output<List<String>> securityGroupIds;

    /**
     * @return A list of exoscale.SecurityGroup (IDs).
     * 
     */
    public Optional<Output<List<String>>> securityGroupIds() {
        return Optional.ofNullable(this.securityGroupIds);
    }

    /**
     * The managed instances type. Please use the `instance_type` argument instead.
     * 
     * @deprecated
     * This attribute has been replaced by &#34;instance_type&#34;.
     * 
     */
    @Deprecated /* This attribute has been replaced by ""instance_type"". */
    @Import(name="serviceOffering")
    private @Nullable Output<String> serviceOffering;

    /**
     * @return The managed instances type. Please use the `instance_type` argument instead.
     * 
     * @deprecated
     * This attribute has been replaced by &#34;instance_type&#34;.
     * 
     */
    @Deprecated /* This attribute has been replaced by ""instance_type"". */
    public Optional<Output<String>> serviceOffering() {
        return Optional.ofNullable(this.serviceOffering);
    }

    /**
     * The number of managed instances.
     * 
     */
    @Import(name="size", required=true)
    private Output<Integer> size;

    /**
     * @return The number of managed instances.
     * 
     */
    public Output<Integer> size() {
        return this.size;
    }

    @Import(name="state")
    private @Nullable Output<String> state;

    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * The exoscale.getComputeTemplate (ID) to use when creating the managed instances.
     * 
     */
    @Import(name="templateId", required=true)
    private Output<String> templateId;

    /**
     * @return The exoscale.getComputeTemplate (ID) to use when creating the managed instances.
     * 
     */
    public Output<String> templateId() {
        return this.templateId;
    }

    /**
     * [cloud-init][cloud-init] configuration to apply to the managed instances (no need to base64-encode or gzip it as the provider will take care of it).
     * 
     */
    @Import(name="userData")
    private @Nullable Output<String> userData;

    /**
     * @return [cloud-init][cloud-init] configuration to apply to the managed instances (no need to base64-encode or gzip it as the provider will take care of it).
     * 
     */
    public Optional<Output<String>> userData() {
        return Optional.ofNullable(this.userData);
    }

    /**
     * (Deprecated) The list of managed instances (IDs). Please use the `instances.*.id` attribute instead.
     * 
     * @deprecated
     * Use the instances exported attribute instead.
     * 
     */
    @Deprecated /* Use the instances exported attribute instead. */
    @Import(name="virtualMachines")
    private @Nullable Output<List<String>> virtualMachines;

    /**
     * @return (Deprecated) The list of managed instances (IDs). Please use the `instances.*.id` attribute instead.
     * 
     * @deprecated
     * Use the instances exported attribute instead.
     * 
     */
    @Deprecated /* Use the instances exported attribute instead. */
    public Optional<Output<List<String>>> virtualMachines() {
        return Optional.ofNullable(this.virtualMachines);
    }

    /**
     * The Exoscale [Zone][zone] name.
     * 
     */
    @Import(name="zone", required=true)
    private Output<String> zone;

    /**
     * @return The Exoscale [Zone][zone] name.
     * 
     */
    public Output<String> zone() {
        return this.zone;
    }

    private InstancePoolArgs() {}

    private InstancePoolArgs(InstancePoolArgs $) {
        this.affinityGroupIds = $.affinityGroupIds;
        this.deployTargetId = $.deployTargetId;
        this.description = $.description;
        this.diskSize = $.diskSize;
        this.elasticIpIds = $.elasticIpIds;
        this.instancePrefix = $.instancePrefix;
        this.instanceType = $.instanceType;
        this.instances = $.instances;
        this.ipv6 = $.ipv6;
        this.keyPair = $.keyPair;
        this.labels = $.labels;
        this.name = $.name;
        this.networkIds = $.networkIds;
        this.securityGroupIds = $.securityGroupIds;
        this.serviceOffering = $.serviceOffering;
        this.size = $.size;
        this.state = $.state;
        this.templateId = $.templateId;
        this.userData = $.userData;
        this.virtualMachines = $.virtualMachines;
        this.zone = $.zone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstancePoolArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstancePoolArgs $;

        public Builder() {
            $ = new InstancePoolArgs();
        }

        public Builder(InstancePoolArgs defaults) {
            $ = new InstancePoolArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param affinityGroupIds A list of exoscale.AntiAffinityGroup (IDs; may only be set at creation time).
         * 
         * @return builder
         * 
         */
        public Builder affinityGroupIds(@Nullable Output<List<String>> affinityGroupIds) {
            $.affinityGroupIds = affinityGroupIds;
            return this;
        }

        /**
         * @param affinityGroupIds A list of exoscale.AntiAffinityGroup (IDs; may only be set at creation time).
         * 
         * @return builder
         * 
         */
        public Builder affinityGroupIds(List<String> affinityGroupIds) {
            return affinityGroupIds(Output.of(affinityGroupIds));
        }

        /**
         * @param affinityGroupIds A list of exoscale.AntiAffinityGroup (IDs; may only be set at creation time).
         * 
         * @return builder
         * 
         */
        public Builder affinityGroupIds(String... affinityGroupIds) {
            return affinityGroupIds(List.of(affinityGroupIds));
        }

        /**
         * @param deployTargetId A deploy target ID.
         * 
         * @return builder
         * 
         */
        public Builder deployTargetId(@Nullable Output<String> deployTargetId) {
            $.deployTargetId = deployTargetId;
            return this;
        }

        /**
         * @param deployTargetId A deploy target ID.
         * 
         * @return builder
         * 
         */
        public Builder deployTargetId(String deployTargetId) {
            return deployTargetId(Output.of(deployTargetId));
        }

        /**
         * @param description A free-form text describing the pool.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description A free-form text describing the pool.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param diskSize The managed instances disk size (GiB).
         * 
         * @return builder
         * 
         */
        public Builder diskSize(@Nullable Output<Integer> diskSize) {
            $.diskSize = diskSize;
            return this;
        }

        /**
         * @param diskSize The managed instances disk size (GiB).
         * 
         * @return builder
         * 
         */
        public Builder diskSize(Integer diskSize) {
            return diskSize(Output.of(diskSize));
        }

        /**
         * @param elasticIpIds A list of exoscale.ElasticIP (IDs).
         * 
         * @return builder
         * 
         */
        public Builder elasticIpIds(@Nullable Output<List<String>> elasticIpIds) {
            $.elasticIpIds = elasticIpIds;
            return this;
        }

        /**
         * @param elasticIpIds A list of exoscale.ElasticIP (IDs).
         * 
         * @return builder
         * 
         */
        public Builder elasticIpIds(List<String> elasticIpIds) {
            return elasticIpIds(Output.of(elasticIpIds));
        }

        /**
         * @param elasticIpIds A list of exoscale.ElasticIP (IDs).
         * 
         * @return builder
         * 
         */
        public Builder elasticIpIds(String... elasticIpIds) {
            return elasticIpIds(List.of(elasticIpIds));
        }

        /**
         * @param instancePrefix The string used to prefix managed instances name (default: `pool`).
         * 
         * @return builder
         * 
         */
        public Builder instancePrefix(@Nullable Output<String> instancePrefix) {
            $.instancePrefix = instancePrefix;
            return this;
        }

        /**
         * @param instancePrefix The string used to prefix managed instances name (default: `pool`).
         * 
         * @return builder
         * 
         */
        public Builder instancePrefix(String instancePrefix) {
            return instancePrefix(Output.of(instancePrefix));
        }

        /**
         * @param instanceType The managed compute instances type (`&lt;family&gt;.&lt;size&gt;`, e.g. `standard.medium`; use the [Exoscale CLI][cli] - `exo compute instance-type list` - for the list of available types).
         * 
         * @return builder
         * 
         */
        public Builder instanceType(@Nullable Output<String> instanceType) {
            $.instanceType = instanceType;
            return this;
        }

        /**
         * @param instanceType The managed compute instances type (`&lt;family&gt;.&lt;size&gt;`, e.g. `standard.medium`; use the [Exoscale CLI][cli] - `exo compute instance-type list` - for the list of available types).
         * 
         * @return builder
         * 
         */
        public Builder instanceType(String instanceType) {
            return instanceType(Output.of(instanceType));
        }

        /**
         * @param instances The list of managed instances. Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder instances(@Nullable Output<List<InstancePoolInstanceArgs>> instances) {
            $.instances = instances;
            return this;
        }

        /**
         * @param instances The list of managed instances. Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder instances(List<InstancePoolInstanceArgs> instances) {
            return instances(Output.of(instances));
        }

        /**
         * @param instances The list of managed instances. Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder instances(InstancePoolInstanceArgs... instances) {
            return instances(List.of(instances));
        }

        /**
         * @param ipv6 Enable IPv6 on managed instances (boolean; default: `false`).
         * 
         * @return builder
         * 
         */
        public Builder ipv6(@Nullable Output<Boolean> ipv6) {
            $.ipv6 = ipv6;
            return this;
        }

        /**
         * @param ipv6 Enable IPv6 on managed instances (boolean; default: `false`).
         * 
         * @return builder
         * 
         */
        public Builder ipv6(Boolean ipv6) {
            return ipv6(Output.of(ipv6));
        }

        /**
         * @param keyPair The exoscale.SSHKey (name) to authorize in the managed instances.
         * 
         * @return builder
         * 
         */
        public Builder keyPair(@Nullable Output<String> keyPair) {
            $.keyPair = keyPair;
            return this;
        }

        /**
         * @param keyPair The exoscale.SSHKey (name) to authorize in the managed instances.
         * 
         * @return builder
         * 
         */
        public Builder keyPair(String keyPair) {
            return keyPair(Output.of(keyPair));
        }

        /**
         * @param labels A map of key/value labels.
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels A map of key/value labels.
         * 
         * @return builder
         * 
         */
        public Builder labels(Map<String,String> labels) {
            return labels(Output.of(labels));
        }

        /**
         * @param name The instance pool name.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The instance pool name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param networkIds A list of exoscale.PrivateNetwork (IDs).
         * 
         * @return builder
         * 
         */
        public Builder networkIds(@Nullable Output<List<String>> networkIds) {
            $.networkIds = networkIds;
            return this;
        }

        /**
         * @param networkIds A list of exoscale.PrivateNetwork (IDs).
         * 
         * @return builder
         * 
         */
        public Builder networkIds(List<String> networkIds) {
            return networkIds(Output.of(networkIds));
        }

        /**
         * @param networkIds A list of exoscale.PrivateNetwork (IDs).
         * 
         * @return builder
         * 
         */
        public Builder networkIds(String... networkIds) {
            return networkIds(List.of(networkIds));
        }

        /**
         * @param securityGroupIds A list of exoscale.SecurityGroup (IDs).
         * 
         * @return builder
         * 
         */
        public Builder securityGroupIds(@Nullable Output<List<String>> securityGroupIds) {
            $.securityGroupIds = securityGroupIds;
            return this;
        }

        /**
         * @param securityGroupIds A list of exoscale.SecurityGroup (IDs).
         * 
         * @return builder
         * 
         */
        public Builder securityGroupIds(List<String> securityGroupIds) {
            return securityGroupIds(Output.of(securityGroupIds));
        }

        /**
         * @param securityGroupIds A list of exoscale.SecurityGroup (IDs).
         * 
         * @return builder
         * 
         */
        public Builder securityGroupIds(String... securityGroupIds) {
            return securityGroupIds(List.of(securityGroupIds));
        }

        /**
         * @param serviceOffering The managed instances type. Please use the `instance_type` argument instead.
         * 
         * @return builder
         * 
         * @deprecated
         * This attribute has been replaced by &#34;instance_type&#34;.
         * 
         */
        @Deprecated /* This attribute has been replaced by ""instance_type"". */
        public Builder serviceOffering(@Nullable Output<String> serviceOffering) {
            $.serviceOffering = serviceOffering;
            return this;
        }

        /**
         * @param serviceOffering The managed instances type. Please use the `instance_type` argument instead.
         * 
         * @return builder
         * 
         * @deprecated
         * This attribute has been replaced by &#34;instance_type&#34;.
         * 
         */
        @Deprecated /* This attribute has been replaced by ""instance_type"". */
        public Builder serviceOffering(String serviceOffering) {
            return serviceOffering(Output.of(serviceOffering));
        }

        /**
         * @param size The number of managed instances.
         * 
         * @return builder
         * 
         */
        public Builder size(Output<Integer> size) {
            $.size = size;
            return this;
        }

        /**
         * @param size The number of managed instances.
         * 
         * @return builder
         * 
         */
        public Builder size(Integer size) {
            return size(Output.of(size));
        }

        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param templateId The exoscale.getComputeTemplate (ID) to use when creating the managed instances.
         * 
         * @return builder
         * 
         */
        public Builder templateId(Output<String> templateId) {
            $.templateId = templateId;
            return this;
        }

        /**
         * @param templateId The exoscale.getComputeTemplate (ID) to use when creating the managed instances.
         * 
         * @return builder
         * 
         */
        public Builder templateId(String templateId) {
            return templateId(Output.of(templateId));
        }

        /**
         * @param userData [cloud-init][cloud-init] configuration to apply to the managed instances (no need to base64-encode or gzip it as the provider will take care of it).
         * 
         * @return builder
         * 
         */
        public Builder userData(@Nullable Output<String> userData) {
            $.userData = userData;
            return this;
        }

        /**
         * @param userData [cloud-init][cloud-init] configuration to apply to the managed instances (no need to base64-encode or gzip it as the provider will take care of it).
         * 
         * @return builder
         * 
         */
        public Builder userData(String userData) {
            return userData(Output.of(userData));
        }

        /**
         * @param virtualMachines (Deprecated) The list of managed instances (IDs). Please use the `instances.*.id` attribute instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Use the instances exported attribute instead.
         * 
         */
        @Deprecated /* Use the instances exported attribute instead. */
        public Builder virtualMachines(@Nullable Output<List<String>> virtualMachines) {
            $.virtualMachines = virtualMachines;
            return this;
        }

        /**
         * @param virtualMachines (Deprecated) The list of managed instances (IDs). Please use the `instances.*.id` attribute instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Use the instances exported attribute instead.
         * 
         */
        @Deprecated /* Use the instances exported attribute instead. */
        public Builder virtualMachines(List<String> virtualMachines) {
            return virtualMachines(Output.of(virtualMachines));
        }

        /**
         * @param virtualMachines (Deprecated) The list of managed instances (IDs). Please use the `instances.*.id` attribute instead.
         * 
         * @return builder
         * 
         * @deprecated
         * Use the instances exported attribute instead.
         * 
         */
        @Deprecated /* Use the instances exported attribute instead. */
        public Builder virtualMachines(String... virtualMachines) {
            return virtualMachines(List.of(virtualMachines));
        }

        /**
         * @param zone The Exoscale [Zone][zone] name.
         * 
         * @return builder
         * 
         */
        public Builder zone(Output<String> zone) {
            $.zone = zone;
            return this;
        }

        /**
         * @param zone The Exoscale [Zone][zone] name.
         * 
         * @return builder
         * 
         */
        public Builder zone(String zone) {
            return zone(Output.of(zone));
        }

        public InstancePoolArgs build() {
            $.size = Objects.requireNonNull($.size, "expected parameter 'size' to be non-null");
            $.templateId = Objects.requireNonNull($.templateId, "expected parameter 'templateId' to be non-null");
            $.zone = Objects.requireNonNull($.zone, "expected parameter 'zone' to be non-null");
            return $;
        }
    }

}
