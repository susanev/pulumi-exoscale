// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumiverse.exoscale;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumiverse.exoscale.InstancePoolArgs;
import com.pulumiverse.exoscale.Utilities;
import com.pulumiverse.exoscale.inputs.InstancePoolState;
import com.pulumiverse.exoscale.outputs.InstancePoolInstance;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Import
 * 
 * An existing instance pool may be imported by `&lt;ID&gt;@&lt;zone&gt;`console
 * 
 * ```sh
 *  $ pulumi import exoscale:index/instancePool:InstancePool \
 * ```
 * 
 *  exoscale_instance_pool.my_instance_pool \
 * 
 *  f81d4fae-7dec-11d0-a765-00a0c91e6bf6@ch-gva-2
 * 
 */
@ResourceType(type="exoscale:index/instancePool:InstancePool")
public class InstancePool extends com.pulumi.resources.CustomResource {
    /**
     * A list of exoscale.AntiAffinityGroup (IDs; may only be set at creation time).
     * 
     */
    @Export(name="affinityGroupIds", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> affinityGroupIds;

    /**
     * @return A list of exoscale.AntiAffinityGroup (IDs; may only be set at creation time).
     * 
     */
    public Output<Optional<List<String>>> affinityGroupIds() {
        return Codegen.optional(this.affinityGroupIds);
    }
    /**
     * A deploy target ID.
     * 
     */
    @Export(name="deployTargetId", type=String.class, parameters={})
    private Output</* @Nullable */ String> deployTargetId;

    /**
     * @return A deploy target ID.
     * 
     */
    public Output<Optional<String>> deployTargetId() {
        return Codegen.optional(this.deployTargetId);
    }
    /**
     * A free-form text describing the pool.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return A free-form text describing the pool.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * The managed instances disk size (GiB).
     * 
     */
    @Export(name="diskSize", type=Integer.class, parameters={})
    private Output<Integer> diskSize;

    /**
     * @return The managed instances disk size (GiB).
     * 
     */
    public Output<Integer> diskSize() {
        return this.diskSize;
    }
    /**
     * A list of exoscale.ElasticIP (IDs).
     * 
     */
    @Export(name="elasticIpIds", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> elasticIpIds;

    /**
     * @return A list of exoscale.ElasticIP (IDs).
     * 
     */
    public Output<Optional<List<String>>> elasticIpIds() {
        return Codegen.optional(this.elasticIpIds);
    }
    /**
     * The string used to prefix managed instances name (default: `pool`).
     * 
     */
    @Export(name="instancePrefix", type=String.class, parameters={})
    private Output</* @Nullable */ String> instancePrefix;

    /**
     * @return The string used to prefix managed instances name (default: `pool`).
     * 
     */
    public Output<Optional<String>> instancePrefix() {
        return Codegen.optional(this.instancePrefix);
    }
    /**
     * The managed compute instances type (`&lt;family&gt;.&lt;size&gt;`, e.g. `standard.medium`; use the [Exoscale CLI][cli] - `exo compute instance-type list` - for the list of available types).
     * 
     */
    @Export(name="instanceType", type=String.class, parameters={})
    private Output<String> instanceType;

    /**
     * @return The managed compute instances type (`&lt;family&gt;.&lt;size&gt;`, e.g. `standard.medium`; use the [Exoscale CLI][cli] - `exo compute instance-type list` - for the list of available types).
     * 
     */
    public Output<String> instanceType() {
        return this.instanceType;
    }
    /**
     * The list of managed instances. Structure is documented below.
     * 
     */
    @Export(name="instances", type=List.class, parameters={InstancePoolInstance.class})
    private Output<List<InstancePoolInstance>> instances;

    /**
     * @return The list of managed instances. Structure is documented below.
     * 
     */
    public Output<List<InstancePoolInstance>> instances() {
        return this.instances;
    }
    /**
     * Enable IPv6 on managed instances (boolean; default: `false`).
     * 
     */
    @Export(name="ipv6", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> ipv6;

    /**
     * @return Enable IPv6 on managed instances (boolean; default: `false`).
     * 
     */
    public Output<Optional<Boolean>> ipv6() {
        return Codegen.optional(this.ipv6);
    }
    /**
     * The exoscale.SSHKey (name) to authorize in the managed instances.
     * 
     */
    @Export(name="keyPair", type=String.class, parameters={})
    private Output</* @Nullable */ String> keyPair;

    /**
     * @return The exoscale.SSHKey (name) to authorize in the managed instances.
     * 
     */
    public Output<Optional<String>> keyPair() {
        return Codegen.optional(this.keyPair);
    }
    /**
     * A map of key/value labels.
     * 
     */
    @Export(name="labels", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> labels;

    /**
     * @return A map of key/value labels.
     * 
     */
    public Output<Optional<Map<String,String>>> labels() {
        return Codegen.optional(this.labels);
    }
    /**
     * The instance pool name.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The instance pool name.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * A list of exoscale.PrivateNetwork (IDs).
     * 
     */
    @Export(name="networkIds", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> networkIds;

    /**
     * @return A list of exoscale.PrivateNetwork (IDs).
     * 
     */
    public Output<Optional<List<String>>> networkIds() {
        return Codegen.optional(this.networkIds);
    }
    /**
     * A list of exoscale.SecurityGroup (IDs).
     * 
     */
    @Export(name="securityGroupIds", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> securityGroupIds;

    /**
     * @return A list of exoscale.SecurityGroup (IDs).
     * 
     */
    public Output<Optional<List<String>>> securityGroupIds() {
        return Codegen.optional(this.securityGroupIds);
    }
    /**
     * The managed instances type. Please use the `instance_type` argument instead.
     * 
     * @deprecated
     * This attribute has been replaced by &#34;instance_type&#34;.
     * 
     */
    @Deprecated /* This attribute has been replaced by ""instance_type"". */
    @Export(name="serviceOffering", type=String.class, parameters={})
    private Output<String> serviceOffering;

    /**
     * @return The managed instances type. Please use the `instance_type` argument instead.
     * 
     */
    public Output<String> serviceOffering() {
        return this.serviceOffering;
    }
    /**
     * The number of managed instances.
     * 
     */
    @Export(name="size", type=Integer.class, parameters={})
    private Output<Integer> size;

    /**
     * @return The number of managed instances.
     * 
     */
    public Output<Integer> size() {
        return this.size;
    }
    @Export(name="state", type=String.class, parameters={})
    private Output<String> state;

    public Output<String> state() {
        return this.state;
    }
    /**
     * The exoscale.getComputeTemplate (ID) to use when creating the managed instances.
     * 
     */
    @Export(name="templateId", type=String.class, parameters={})
    private Output<String> templateId;

    /**
     * @return The exoscale.getComputeTemplate (ID) to use when creating the managed instances.
     * 
     */
    public Output<String> templateId() {
        return this.templateId;
    }
    /**
     * [cloud-init][cloud-init] configuration to apply to the managed instances (no need to base64-encode or gzip it as the provider will take care of it).
     * 
     */
    @Export(name="userData", type=String.class, parameters={})
    private Output</* @Nullable */ String> userData;

    /**
     * @return [cloud-init][cloud-init] configuration to apply to the managed instances (no need to base64-encode or gzip it as the provider will take care of it).
     * 
     */
    public Output<Optional<String>> userData() {
        return Codegen.optional(this.userData);
    }
    /**
     * (Deprecated) The list of managed instances (IDs). Please use the `instances.*.id` attribute instead.
     * 
     * @deprecated
     * Use the instances exported attribute instead.
     * 
     */
    @Deprecated /* Use the instances exported attribute instead. */
    @Export(name="virtualMachines", type=List.class, parameters={String.class})
    private Output<List<String>> virtualMachines;

    /**
     * @return (Deprecated) The list of managed instances (IDs). Please use the `instances.*.id` attribute instead.
     * 
     */
    public Output<List<String>> virtualMachines() {
        return this.virtualMachines;
    }
    /**
     * The Exoscale [Zone][zone] name.
     * 
     */
    @Export(name="zone", type=String.class, parameters={})
    private Output<String> zone;

    /**
     * @return The Exoscale [Zone][zone] name.
     * 
     */
    public Output<String> zone() {
        return this.zone;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public InstancePool(String name) {
        this(name, InstancePoolArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public InstancePool(String name, InstancePoolArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public InstancePool(String name, InstancePoolArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("exoscale:index/instancePool:InstancePool", name, args == null ? InstancePoolArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private InstancePool(String name, Output<String> id, @Nullable InstancePoolState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("exoscale:index/instancePool:InstancePool", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static InstancePool get(String name, Output<String> id, @Nullable InstancePoolState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new InstancePool(name, id, state, options);
    }
}
