// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumiverse.exoscale.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumiverse.exoscale.inputs.GetDomainRecordFilter;
import java.lang.String;
import java.util.Objects;


public final class GetDomainRecordPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetDomainRecordPlainArgs Empty = new GetDomainRecordPlainArgs();

    /**
     * The exoscale.Domain name to match.
     * 
     */
    @Import(name="domain", required=true)
    private String domain;

    /**
     * @return The exoscale.Domain name to match.
     * 
     */
    public String domain() {
        return this.domain;
    }

    /**
     * Filter to apply when looking up domain records. Structure is documented below.
     * 
     */
    @Import(name="filter", required=true)
    private GetDomainRecordFilter filter;

    /**
     * @return Filter to apply when looking up domain records. Structure is documented below.
     * 
     */
    public GetDomainRecordFilter filter() {
        return this.filter;
    }

    private GetDomainRecordPlainArgs() {}

    private GetDomainRecordPlainArgs(GetDomainRecordPlainArgs $) {
        this.domain = $.domain;
        this.filter = $.filter;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDomainRecordPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDomainRecordPlainArgs $;

        public Builder() {
            $ = new GetDomainRecordPlainArgs();
        }

        public Builder(GetDomainRecordPlainArgs defaults) {
            $ = new GetDomainRecordPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param domain The exoscale.Domain name to match.
         * 
         * @return builder
         * 
         */
        public Builder domain(String domain) {
            $.domain = domain;
            return this;
        }

        /**
         * @param filter Filter to apply when looking up domain records. Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder filter(GetDomainRecordFilter filter) {
            $.filter = filter;
            return this;
        }

        public GetDomainRecordPlainArgs build() {
            $.domain = Objects.requireNonNull($.domain, "expected parameter 'domain' to be non-null");
            $.filter = Objects.requireNonNull($.filter, "expected parameter 'filter' to be non-null");
            return $;
        }
    }

}
