// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumiverse.exoscale.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AffinityState extends com.pulumi.resources.ResourceArgs {

    public static final AffinityState Empty = new AffinityState();

    /**
     * A free-form text describing the group.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return A free-form text describing the group.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The anti-affinity group name.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The anti-affinity group name.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The type of the group (`host anti-affinity` is the only supported value).
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return The type of the group (`host anti-affinity` is the only supported value).
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * The compute instances (IDs) members of the group.
     * 
     */
    @Import(name="virtualMachineIds")
    private @Nullable Output<List<String>> virtualMachineIds;

    /**
     * @return The compute instances (IDs) members of the group.
     * 
     */
    public Optional<Output<List<String>>> virtualMachineIds() {
        return Optional.ofNullable(this.virtualMachineIds);
    }

    private AffinityState() {}

    private AffinityState(AffinityState $) {
        this.description = $.description;
        this.name = $.name;
        this.type = $.type;
        this.virtualMachineIds = $.virtualMachineIds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AffinityState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AffinityState $;

        public Builder() {
            $ = new AffinityState();
        }

        public Builder(AffinityState defaults) {
            $ = new AffinityState(Objects.requireNonNull(defaults));
        }

        /**
         * @param description A free-form text describing the group.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description A free-form text describing the group.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param name The anti-affinity group name.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The anti-affinity group name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param type The type of the group (`host anti-affinity` is the only supported value).
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of the group (`host anti-affinity` is the only supported value).
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param virtualMachineIds The compute instances (IDs) members of the group.
         * 
         * @return builder
         * 
         */
        public Builder virtualMachineIds(@Nullable Output<List<String>> virtualMachineIds) {
            $.virtualMachineIds = virtualMachineIds;
            return this;
        }

        /**
         * @param virtualMachineIds The compute instances (IDs) members of the group.
         * 
         * @return builder
         * 
         */
        public Builder virtualMachineIds(List<String> virtualMachineIds) {
            return virtualMachineIds(Output.of(virtualMachineIds));
        }

        /**
         * @param virtualMachineIds The compute instances (IDs) members of the group.
         * 
         * @return builder
         * 
         */
        public Builder virtualMachineIds(String... virtualMachineIds) {
            return virtualMachineIds(List.of(virtualMachineIds));
        }

        public AffinityState build() {
            return $;
        }
    }

}
