// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumiverse.exoscale.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SecondaryIPAddressState extends com.pulumi.resources.ResourceArgs {

    public static final SecondaryIPAddressState Empty = new SecondaryIPAddressState();

    /**
     * The compute instance ID.
     * 
     */
    @Import(name="computeId")
    private @Nullable Output<String> computeId;

    /**
     * @return The compute instance ID.
     * 
     */
    public Optional<Output<String>> computeId() {
        return Optional.ofNullable(this.computeId);
    }

    /**
     * The Elastic IP (EIP) address.
     * 
     */
    @Import(name="ipAddress")
    private @Nullable Output<String> ipAddress;

    /**
     * @return The Elastic IP (EIP) address.
     * 
     */
    public Optional<Output<String>> ipAddress() {
        return Optional.ofNullable(this.ipAddress);
    }

    /**
     * The network (ID) the compute instance NIC is attached to.
     * 
     */
    @Import(name="networkId")
    private @Nullable Output<String> networkId;

    /**
     * @return The network (ID) the compute instance NIC is attached to.
     * 
     */
    public Optional<Output<String>> networkId() {
        return Optional.ofNullable(this.networkId);
    }

    /**
     * The network interface (NIC) ID.
     * 
     */
    @Import(name="nicId")
    private @Nullable Output<String> nicId;

    /**
     * @return The network interface (NIC) ID.
     * 
     */
    public Optional<Output<String>> nicId() {
        return Optional.ofNullable(this.nicId);
    }

    private SecondaryIPAddressState() {}

    private SecondaryIPAddressState(SecondaryIPAddressState $) {
        this.computeId = $.computeId;
        this.ipAddress = $.ipAddress;
        this.networkId = $.networkId;
        this.nicId = $.nicId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecondaryIPAddressState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecondaryIPAddressState $;

        public Builder() {
            $ = new SecondaryIPAddressState();
        }

        public Builder(SecondaryIPAddressState defaults) {
            $ = new SecondaryIPAddressState(Objects.requireNonNull(defaults));
        }

        /**
         * @param computeId The compute instance ID.
         * 
         * @return builder
         * 
         */
        public Builder computeId(@Nullable Output<String> computeId) {
            $.computeId = computeId;
            return this;
        }

        /**
         * @param computeId The compute instance ID.
         * 
         * @return builder
         * 
         */
        public Builder computeId(String computeId) {
            return computeId(Output.of(computeId));
        }

        /**
         * @param ipAddress The Elastic IP (EIP) address.
         * 
         * @return builder
         * 
         */
        public Builder ipAddress(@Nullable Output<String> ipAddress) {
            $.ipAddress = ipAddress;
            return this;
        }

        /**
         * @param ipAddress The Elastic IP (EIP) address.
         * 
         * @return builder
         * 
         */
        public Builder ipAddress(String ipAddress) {
            return ipAddress(Output.of(ipAddress));
        }

        /**
         * @param networkId The network (ID) the compute instance NIC is attached to.
         * 
         * @return builder
         * 
         */
        public Builder networkId(@Nullable Output<String> networkId) {
            $.networkId = networkId;
            return this;
        }

        /**
         * @param networkId The network (ID) the compute instance NIC is attached to.
         * 
         * @return builder
         * 
         */
        public Builder networkId(String networkId) {
            return networkId(Output.of(networkId));
        }

        /**
         * @param nicId The network interface (NIC) ID.
         * 
         * @return builder
         * 
         */
        public Builder nicId(@Nullable Output<String> nicId) {
            $.nicId = nicId;
            return this;
        }

        /**
         * @param nicId The network interface (NIC) ID.
         * 
         * @return builder
         * 
         */
        public Builder nicId(String nicId) {
            return nicId(Output.of(nicId));
        }

        public SecondaryIPAddressState build() {
            return $;
        }
    }

}
