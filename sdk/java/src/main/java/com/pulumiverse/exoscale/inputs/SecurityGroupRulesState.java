// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumiverse.exoscale.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumiverse.exoscale.inputs.SecurityGroupRulesEgressArgs;
import com.pulumiverse.exoscale.inputs.SecurityGroupRulesIngressArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SecurityGroupRulesState extends com.pulumi.resources.ResourceArgs {

    public static final SecurityGroupRulesState Empty = new SecurityGroupRulesState();

    @Import(name="egresses")
    private @Nullable Output<List<SecurityGroupRulesEgressArgs>> egresses;

    public Optional<Output<List<SecurityGroupRulesEgressArgs>>> egresses() {
        return Optional.ofNullable(this.egresses);
    }

    @Import(name="ingresses")
    private @Nullable Output<List<SecurityGroupRulesIngressArgs>> ingresses;

    public Optional<Output<List<SecurityGroupRulesIngressArgs>>> ingresses() {
        return Optional.ofNullable(this.ingresses);
    }

    /**
     * The security group (name) the rules apply to (conflicts with `security_group_id`).
     * 
     */
    @Import(name="securityGroup")
    private @Nullable Output<String> securityGroup;

    /**
     * @return The security group (name) the rules apply to (conflicts with `security_group_id`).
     * 
     */
    public Optional<Output<String>> securityGroup() {
        return Optional.ofNullable(this.securityGroup);
    }

    /**
     * The security group (ID) the rules apply to (conficts with `security_group)`.
     * 
     */
    @Import(name="securityGroupId")
    private @Nullable Output<String> securityGroupId;

    /**
     * @return The security group (ID) the rules apply to (conficts with `security_group)`.
     * 
     */
    public Optional<Output<String>> securityGroupId() {
        return Optional.ofNullable(this.securityGroupId);
    }

    private SecurityGroupRulesState() {}

    private SecurityGroupRulesState(SecurityGroupRulesState $) {
        this.egresses = $.egresses;
        this.ingresses = $.ingresses;
        this.securityGroup = $.securityGroup;
        this.securityGroupId = $.securityGroupId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecurityGroupRulesState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecurityGroupRulesState $;

        public Builder() {
            $ = new SecurityGroupRulesState();
        }

        public Builder(SecurityGroupRulesState defaults) {
            $ = new SecurityGroupRulesState(Objects.requireNonNull(defaults));
        }

        public Builder egresses(@Nullable Output<List<SecurityGroupRulesEgressArgs>> egresses) {
            $.egresses = egresses;
            return this;
        }

        public Builder egresses(List<SecurityGroupRulesEgressArgs> egresses) {
            return egresses(Output.of(egresses));
        }

        public Builder egresses(SecurityGroupRulesEgressArgs... egresses) {
            return egresses(List.of(egresses));
        }

        public Builder ingresses(@Nullable Output<List<SecurityGroupRulesIngressArgs>> ingresses) {
            $.ingresses = ingresses;
            return this;
        }

        public Builder ingresses(List<SecurityGroupRulesIngressArgs> ingresses) {
            return ingresses(Output.of(ingresses));
        }

        public Builder ingresses(SecurityGroupRulesIngressArgs... ingresses) {
            return ingresses(List.of(ingresses));
        }

        /**
         * @param securityGroup The security group (name) the rules apply to (conflicts with `security_group_id`).
         * 
         * @return builder
         * 
         */
        public Builder securityGroup(@Nullable Output<String> securityGroup) {
            $.securityGroup = securityGroup;
            return this;
        }

        /**
         * @param securityGroup The security group (name) the rules apply to (conflicts with `security_group_id`).
         * 
         * @return builder
         * 
         */
        public Builder securityGroup(String securityGroup) {
            return securityGroup(Output.of(securityGroup));
        }

        /**
         * @param securityGroupId The security group (ID) the rules apply to (conficts with `security_group)`.
         * 
         * @return builder
         * 
         */
        public Builder securityGroupId(@Nullable Output<String> securityGroupId) {
            $.securityGroupId = securityGroupId;
            return this;
        }

        /**
         * @param securityGroupId The security group (ID) the rules apply to (conficts with `security_group)`.
         * 
         * @return builder
         * 
         */
        public Builder securityGroupId(String securityGroupId) {
            return securityGroupId(Output.of(securityGroupId));
        }

        public SecurityGroupRulesState build() {
            return $;
        }
    }

}
