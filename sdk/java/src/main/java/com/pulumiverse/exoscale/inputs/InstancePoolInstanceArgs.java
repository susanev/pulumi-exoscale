// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumiverse.exoscale.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstancePoolInstanceArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstancePoolInstanceArgs Empty = new InstancePoolInstanceArgs();

    /**
     * The compute instance ID.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return The compute instance ID.
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * The instance (main network interface) IPv6 address.
     * 
     */
    @Import(name="ipv6Address")
    private @Nullable Output<String> ipv6Address;

    /**
     * @return The instance (main network interface) IPv6 address.
     * 
     */
    public Optional<Output<String>> ipv6Address() {
        return Optional.ofNullable(this.ipv6Address);
    }

    /**
     * The instance pool name.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The instance pool name.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The instance (main network interface) IPv4 address.
     * 
     */
    @Import(name="publicIpAddress")
    private @Nullable Output<String> publicIpAddress;

    /**
     * @return The instance (main network interface) IPv4 address.
     * 
     */
    public Optional<Output<String>> publicIpAddress() {
        return Optional.ofNullable(this.publicIpAddress);
    }

    private InstancePoolInstanceArgs() {}

    private InstancePoolInstanceArgs(InstancePoolInstanceArgs $) {
        this.id = $.id;
        this.ipv6Address = $.ipv6Address;
        this.name = $.name;
        this.publicIpAddress = $.publicIpAddress;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstancePoolInstanceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstancePoolInstanceArgs $;

        public Builder() {
            $ = new InstancePoolInstanceArgs();
        }

        public Builder(InstancePoolInstanceArgs defaults) {
            $ = new InstancePoolInstanceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param id The compute instance ID.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The compute instance ID.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param ipv6Address The instance (main network interface) IPv6 address.
         * 
         * @return builder
         * 
         */
        public Builder ipv6Address(@Nullable Output<String> ipv6Address) {
            $.ipv6Address = ipv6Address;
            return this;
        }

        /**
         * @param ipv6Address The instance (main network interface) IPv6 address.
         * 
         * @return builder
         * 
         */
        public Builder ipv6Address(String ipv6Address) {
            return ipv6Address(Output.of(ipv6Address));
        }

        /**
         * @param name The instance pool name.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The instance pool name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param publicIpAddress The instance (main network interface) IPv4 address.
         * 
         * @return builder
         * 
         */
        public Builder publicIpAddress(@Nullable Output<String> publicIpAddress) {
            $.publicIpAddress = publicIpAddress;
            return this;
        }

        /**
         * @param publicIpAddress The instance (main network interface) IPv4 address.
         * 
         * @return builder
         * 
         */
        public Builder publicIpAddress(String publicIpAddress) {
            return publicIpAddress(Output.of(publicIpAddress));
        }

        public InstancePoolInstanceArgs build() {
            return $;
        }
    }

}
