// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumiverse.exoscale.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DatabaseOpensearchDashboardsArgs extends com.pulumi.resources.ResourceArgs {

    public static final DatabaseOpensearchDashboardsArgs Empty = new DatabaseOpensearchDashboardsArgs();

    /**
     * {Type -  schema.TypeBool, Optional -  true, Default -  true},
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return {Type -  schema.TypeBool, Optional -  true, Default -  true},
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * {Type -  schema.TypeInt, Optional -  true, Default -  128},
     * 
     */
    @Import(name="maxOldSpaceSize")
    private @Nullable Output<Integer> maxOldSpaceSize;

    /**
     * @return {Type -  schema.TypeInt, Optional -  true, Default -  128},
     * 
     */
    public Optional<Output<Integer>> maxOldSpaceSize() {
        return Optional.ofNullable(this.maxOldSpaceSize);
    }

    /**
     * {Type -  schema.TypeInt, Optional -  true, Default -  30000},
     * `settings` -  OpenSearch-specific settings, in json. e.g.`jsonencode({thread_pool_search_size: 64})`. Use `exo x get-dbaas-settings-opensearch` to get a list of available settings.
     * 
     */
    @Import(name="requestTimeout")
    private @Nullable Output<Integer> requestTimeout;

    /**
     * @return {Type -  schema.TypeInt, Optional -  true, Default -  30000},
     * `settings` -  OpenSearch-specific settings, in json. e.g.`jsonencode({thread_pool_search_size: 64})`. Use `exo x get-dbaas-settings-opensearch` to get a list of available settings.
     * 
     */
    public Optional<Output<Integer>> requestTimeout() {
        return Optional.ofNullable(this.requestTimeout);
    }

    private DatabaseOpensearchDashboardsArgs() {}

    private DatabaseOpensearchDashboardsArgs(DatabaseOpensearchDashboardsArgs $) {
        this.enabled = $.enabled;
        this.maxOldSpaceSize = $.maxOldSpaceSize;
        this.requestTimeout = $.requestTimeout;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DatabaseOpensearchDashboardsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatabaseOpensearchDashboardsArgs $;

        public Builder() {
            $ = new DatabaseOpensearchDashboardsArgs();
        }

        public Builder(DatabaseOpensearchDashboardsArgs defaults) {
            $ = new DatabaseOpensearchDashboardsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enabled {Type -  schema.TypeBool, Optional -  true, Default -  true},
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled {Type -  schema.TypeBool, Optional -  true, Default -  true},
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param maxOldSpaceSize {Type -  schema.TypeInt, Optional -  true, Default -  128},
         * 
         * @return builder
         * 
         */
        public Builder maxOldSpaceSize(@Nullable Output<Integer> maxOldSpaceSize) {
            $.maxOldSpaceSize = maxOldSpaceSize;
            return this;
        }

        /**
         * @param maxOldSpaceSize {Type -  schema.TypeInt, Optional -  true, Default -  128},
         * 
         * @return builder
         * 
         */
        public Builder maxOldSpaceSize(Integer maxOldSpaceSize) {
            return maxOldSpaceSize(Output.of(maxOldSpaceSize));
        }

        /**
         * @param requestTimeout {Type -  schema.TypeInt, Optional -  true, Default -  30000},
         * `settings` -  OpenSearch-specific settings, in json. e.g.`jsonencode({thread_pool_search_size: 64})`. Use `exo x get-dbaas-settings-opensearch` to get a list of available settings.
         * 
         * @return builder
         * 
         */
        public Builder requestTimeout(@Nullable Output<Integer> requestTimeout) {
            $.requestTimeout = requestTimeout;
            return this;
        }

        /**
         * @param requestTimeout {Type -  schema.TypeInt, Optional -  true, Default -  30000},
         * `settings` -  OpenSearch-specific settings, in json. e.g.`jsonencode({thread_pool_search_size: 64})`. Use `exo x get-dbaas-settings-opensearch` to get a list of available settings.
         * 
         * @return builder
         * 
         */
        public Builder requestTimeout(Integer requestTimeout) {
            return requestTimeout(Output.of(requestTimeout));
        }

        public DatabaseOpensearchDashboardsArgs build() {
            return $;
        }
    }

}
