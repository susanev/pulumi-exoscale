// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumiverse.exoscale;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumiverse.exoscale.DomainRecordArgs;
import com.pulumiverse.exoscale.Utilities;
import com.pulumiverse.exoscale.inputs.DomainRecordState;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * ## Import
 * 
 * An existing DNS domain record may be imported by `&lt;ID&gt;`console
 * 
 * ```sh
 *  $ pulumi import exoscale:index/domainRecord:DomainRecord \
 * ```
 * 
 *  exoscale_domain_record.my_host \
 * 
 *  f81d4fae-7dec-11d0-a765-00a0c91e6bf6
 * 
 */
@ResourceType(type="exoscale:index/domainRecord:DomainRecord")
public class DomainRecord extends com.pulumi.resources.CustomResource {
    /**
     * The record value.
     * 
     */
    @Export(name="content", type=String.class, parameters={})
    private Output<String> content;

    /**
     * @return The record value.
     * 
     */
    public Output<String> content() {
        return this.content;
    }
    /**
     * The parent exoscale.Domain to attach the record to.
     * 
     */
    @Export(name="domain", type=String.class, parameters={})
    private Output<String> domain;

    /**
     * @return The parent exoscale.Domain to attach the record to.
     * 
     */
    public Output<String> domain() {
        return this.domain;
    }
    /**
     * The record *Fully Qualified Domain Name* (FQDN). Useful for aliasing `A`/`AAAA` records with `CNAME`.
     * 
     */
    @Export(name="hostname", type=String.class, parameters={})
    private Output<String> hostname;

    /**
     * @return The record *Fully Qualified Domain Name* (FQDN). Useful for aliasing `A`/`AAAA` records with `CNAME`.
     * 
     */
    public Output<String> hostname() {
        return this.hostname;
    }
    /**
     * The record name, Leave blank (`&#34;&#34;`) to create a root record (similar to using `@` in a DNS zone file).
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The record name, Leave blank (`&#34;&#34;`) to create a root record (similar to using `@` in a DNS zone file).
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The record priority (for types that support it; minimum `0`).
     * 
     */
    @Export(name="prio", type=Integer.class, parameters={})
    private Output<Integer> prio;

    /**
     * @return The record priority (for types that support it; minimum `0`).
     * 
     */
    public Output<Integer> prio() {
        return this.prio;
    }
    /**
     * The record type (`A`, `AAAA`, `ALIAS`, `CAA`, `CNAME`, `HINFO`, `MX`, `NAPTR`, `NS`, `POOL`, `SPF`, `SRV`, `SSHFP`, `TXT`, `URL`).
     * 
     */
    @Export(name="recordType", type=String.class, parameters={})
    private Output<String> recordType;

    /**
     * @return The record type (`A`, `AAAA`, `ALIAS`, `CAA`, `CNAME`, `HINFO`, `MX`, `NAPTR`, `NS`, `POOL`, `SPF`, `SRV`, `SSHFP`, `TXT`, `URL`).
     * 
     */
    public Output<String> recordType() {
        return this.recordType;
    }
    /**
     * The record TTL (seconds; minimum `0`; default: `3600`).
     * 
     */
    @Export(name="ttl", type=Integer.class, parameters={})
    private Output<Integer> ttl;

    /**
     * @return The record TTL (seconds; minimum `0`; default: `3600`).
     * 
     */
    public Output<Integer> ttl() {
        return this.ttl;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DomainRecord(String name) {
        this(name, DomainRecordArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DomainRecord(String name, DomainRecordArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DomainRecord(String name, DomainRecordArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("exoscale:index/domainRecord:DomainRecord", name, args == null ? DomainRecordArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private DomainRecord(String name, Output<String> id, @Nullable DomainRecordState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("exoscale:index/domainRecord:DomainRecord", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DomainRecord get(String name, Output<String> id, @Nullable DomainRecordState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new DomainRecord(name, id, state, options);
    }
}
