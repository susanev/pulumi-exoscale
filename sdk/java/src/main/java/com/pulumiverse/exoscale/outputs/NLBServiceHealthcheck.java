// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumiverse.exoscale.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class NLBServiceHealthcheck {
    /**
     * @return The healthcheck interval in seconds (default: `10`).
     * 
     */
    private @Nullable Integer interval;
    /**
     * @return The healthcheck mode (`tcp`|`http`|`https`; default: `tcp`).
     * 
     */
    private @Nullable String mode;
    /**
     * @return The healthcheck port.
     * 
     */
    private Integer port;
    /**
     * @return The healthcheck retries (default: `1`).
     * 
     */
    private @Nullable Integer retries;
    /**
     * @return The healthcheck timeout (seconds; default: `5`).
     * 
     */
    private @Nullable Integer timeout;
    /**
     * @return The healthcheck TLS SNI server name (only if `mode` is `https`).
     * 
     */
    private @Nullable String tlsSni;
    /**
     * @return The healthcheck URI (must be set only if `mode` is `http(s)`).
     * 
     */
    private @Nullable String uri;

    private NLBServiceHealthcheck() {}
    /**
     * @return The healthcheck interval in seconds (default: `10`).
     * 
     */
    public Optional<Integer> interval() {
        return Optional.ofNullable(this.interval);
    }
    /**
     * @return The healthcheck mode (`tcp`|`http`|`https`; default: `tcp`).
     * 
     */
    public Optional<String> mode() {
        return Optional.ofNullable(this.mode);
    }
    /**
     * @return The healthcheck port.
     * 
     */
    public Integer port() {
        return this.port;
    }
    /**
     * @return The healthcheck retries (default: `1`).
     * 
     */
    public Optional<Integer> retries() {
        return Optional.ofNullable(this.retries);
    }
    /**
     * @return The healthcheck timeout (seconds; default: `5`).
     * 
     */
    public Optional<Integer> timeout() {
        return Optional.ofNullable(this.timeout);
    }
    /**
     * @return The healthcheck TLS SNI server name (only if `mode` is `https`).
     * 
     */
    public Optional<String> tlsSni() {
        return Optional.ofNullable(this.tlsSni);
    }
    /**
     * @return The healthcheck URI (must be set only if `mode` is `http(s)`).
     * 
     */
    public Optional<String> uri() {
        return Optional.ofNullable(this.uri);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NLBServiceHealthcheck defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer interval;
        private @Nullable String mode;
        private Integer port;
        private @Nullable Integer retries;
        private @Nullable Integer timeout;
        private @Nullable String tlsSni;
        private @Nullable String uri;
        public Builder() {}
        public Builder(NLBServiceHealthcheck defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.interval = defaults.interval;
    	      this.mode = defaults.mode;
    	      this.port = defaults.port;
    	      this.retries = defaults.retries;
    	      this.timeout = defaults.timeout;
    	      this.tlsSni = defaults.tlsSni;
    	      this.uri = defaults.uri;
        }

        @CustomType.Setter
        public Builder interval(@Nullable Integer interval) {
            this.interval = interval;
            return this;
        }
        @CustomType.Setter
        public Builder mode(@Nullable String mode) {
            this.mode = mode;
            return this;
        }
        @CustomType.Setter
        public Builder port(Integer port) {
            this.port = Objects.requireNonNull(port);
            return this;
        }
        @CustomType.Setter
        public Builder retries(@Nullable Integer retries) {
            this.retries = retries;
            return this;
        }
        @CustomType.Setter
        public Builder timeout(@Nullable Integer timeout) {
            this.timeout = timeout;
            return this;
        }
        @CustomType.Setter
        public Builder tlsSni(@Nullable String tlsSni) {
            this.tlsSni = tlsSni;
            return this;
        }
        @CustomType.Setter
        public Builder uri(@Nullable String uri) {
            this.uri = uri;
            return this;
        }
        public NLBServiceHealthcheck build() {
            final var o = new NLBServiceHealthcheck();
            o.interval = interval;
            o.mode = mode;
            o.port = port;
            o.retries = retries;
            o.timeout = timeout;
            o.tlsSni = tlsSni;
            o.uri = uri;
            return o;
        }
    }
}
