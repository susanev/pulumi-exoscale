// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumiverse.exoscale;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumiverse.exoscale.ComputeArgs;
import com.pulumiverse.exoscale.Utilities;
import com.pulumiverse.exoscale.inputs.ComputeState;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * !&gt; **WARNING:** This resource is **DEPRECATED** and will be removed in the next major version. Please use exoscale.ComputeInstance instead.
 * 
 */
@ResourceType(type="exoscale:index/compute:Compute")
public class Compute extends com.pulumi.resources.CustomResource {
    /**
     * A list of anti-affinity groups (IDs; at creation time only; conflicts with `affinity_groups`).
     * 
     */
    @Export(name="affinityGroupIds", type=List.class, parameters={String.class})
    private Output<List<String>> affinityGroupIds;

    /**
     * @return A list of anti-affinity groups (IDs; at creation time only; conflicts with `affinity_groups`).
     * 
     */
    public Output<List<String>> affinityGroupIds() {
        return this.affinityGroupIds;
    }
    /**
     * A list of anti-affinity groups (names; at creation time only; conflicts with `affinity_group_ids`).
     * 
     */
    @Export(name="affinityGroups", type=List.class, parameters={String.class})
    private Output<List<String>> affinityGroups;

    /**
     * @return A list of anti-affinity groups (names; at creation time only; conflicts with `affinity_group_ids`).
     * 
     */
    public Output<List<String>> affinityGroups() {
        return this.affinityGroups;
    }
    /**
     * The instance disk size (GiB; at least `10`).
     * 
     */
    @Export(name="diskSize", type=Integer.class, parameters={})
    private Output<Integer> diskSize;

    /**
     * @return The instance disk size (GiB; at least `10`).
     * 
     */
    public Output<Integer> diskSize() {
        return this.diskSize;
    }
    /**
     * The displayed instance name. Note: if the `hostname` attribute is not set, this attribute is also used to set the OS&#39; *hostname* during creation, so the value must contain only alphanumeric and hyphen (&#34;-&#34;) characters; it can be changed to any character during a later update. If neither `display_name` or `hostname` attributes are set, a random value will be generated automatically.
     * 
     */
    @Export(name="displayName", type=String.class, parameters={})
    private Output<String> displayName;

    /**
     * @return The displayed instance name. Note: if the `hostname` attribute is not set, this attribute is also used to set the OS&#39; *hostname* during creation, so the value must contain only alphanumeric and hyphen (&#34;-&#34;) characters; it can be changed to any character during a later update. If neither `display_name` or `hostname` attributes are set, a random value will be generated automatically.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    @Export(name="gateway", type=String.class, parameters={})
    private Output<String> gateway;

    public Output<String> gateway() {
        return this.gateway;
    }
    /**
     * The instance hostname, must contain only alphanumeric and hyphen (`-`) characters. If neither `display_name` or `hostname` attributes are set, a random value will be generated automatically. Note: updating this attribute&#39;s value requires to reboot the instance.
     * 
     */
    @Export(name="hostname", type=String.class, parameters={})
    private Output<String> hostname;

    /**
     * @return The instance hostname, must contain only alphanumeric and hyphen (`-`) characters. If neither `display_name` or `hostname` attributes are set, a random value will be generated automatically. Note: updating this attribute&#39;s value requires to reboot the instance.
     * 
     */
    public Output<String> hostname() {
        return this.hostname;
    }
    /**
     * Enable IPv4 on the instance (only supported value is `true`).
     * 
     */
    @Export(name="ip4", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> ip4;

    /**
     * @return Enable IPv4 on the instance (only supported value is `true`).
     * 
     */
    public Output<Optional<Boolean>> ip4() {
        return Codegen.optional(this.ip4);
    }
    /**
     * Enable IPv6 on the instance (boolean; default: `false`).
     * 
     */
    @Export(name="ip6", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> ip6;

    /**
     * @return Enable IPv6 on the instance (boolean; default: `false`).
     * 
     */
    public Output<Optional<Boolean>> ip6() {
        return Codegen.optional(this.ip6);
    }
    /**
     * The instance (main network interface) IPv6 address (if enabled).
     * 
     */
    @Export(name="ip6Address", type=String.class, parameters={})
    private Output<String> ip6Address;

    /**
     * @return The instance (main network interface) IPv6 address (if enabled).
     * 
     */
    public Output<String> ip6Address() {
        return this.ip6Address;
    }
    @Export(name="ip6Cidr", type=String.class, parameters={})
    private Output<String> ip6Cidr;

    public Output<String> ip6Cidr() {
        return this.ip6Cidr;
    }
    /**
     * The instance (main network interface) IPv4 address.
     * 
     */
    @Export(name="ipAddress", type=String.class, parameters={})
    private Output<String> ipAddress;

    /**
     * @return The instance (main network interface) IPv4 address.
     * 
     */
    public Output<String> ipAddress() {
        return this.ipAddress;
    }
    /**
     * The SSH keypair (name) to authorize in the instance.
     * 
     */
    @Export(name="keyPair", type=String.class, parameters={})
    private Output</* @Nullable */ String> keyPair;

    /**
     * @return The SSH keypair (name) to authorize in the instance.
     * 
     */
    public Output<Optional<String>> keyPair() {
        return Codegen.optional(this.keyPair);
    }
    /**
     * The keyboard layout configuration (`de`, `de-ch`, `es`, `fi`, `fr`, `fr-be`, `fr-ch`, `is`, `it`, `jp`, `nl-be`, `no`, `pt`, `uk`, `us`; at creation time only).
     * 
     */
    @Export(name="keyboard", type=String.class, parameters={})
    private Output</* @Nullable */ String> keyboard;

    /**
     * @return The keyboard layout configuration (`de`, `de-ch`, `es`, `fi`, `fr`, `fr-be`, `fr-ch`, `is`, `it`, `jp`, `nl-be`, `no`, `pt`, `uk`, `us`; at creation time only).
     * 
     */
    public Output<Optional<String>> keyboard() {
        return Codegen.optional(this.keyboard);
    }
    /**
     * (Deprecated) The instance hostname. Please use the `hostname` argument instead.
     * 
     * @deprecated
     * use `hostname` attribute instead
     * 
     */
    @Deprecated /* use `hostname` attribute instead */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return (Deprecated) The instance hostname. Please use the `hostname` argument instead.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The instance initial password and/or encrypted password.
     * 
     */
    @Export(name="password", type=String.class, parameters={})
    private Output<String> password;

    /**
     * @return The instance initial password and/or encrypted password.
     * 
     */
    public Output<String> password() {
        return this.password;
    }
    /**
     * The instance reverse DNS record (must end with a `.`; e.g: `my-instance.example.net.`).
     * 
     */
    @Export(name="reverseDns", type=String.class, parameters={})
    private Output</* @Nullable */ String> reverseDns;

    /**
     * @return The instance reverse DNS record (must end with a `.`; e.g: `my-instance.example.net.`).
     * 
     */
    public Output<Optional<String>> reverseDns() {
        return Codegen.optional(this.reverseDns);
    }
    /**
     * A list of security groups (IDs; conflicts with `security_groups`).
     * 
     */
    @Export(name="securityGroupIds", type=List.class, parameters={String.class})
    private Output<List<String>> securityGroupIds;

    /**
     * @return A list of security groups (IDs; conflicts with `security_groups`).
     * 
     */
    public Output<List<String>> securityGroupIds() {
        return this.securityGroupIds;
    }
    /**
     * A list of security groups (names; conflicts with `security_group_ids`).
     * 
     */
    @Export(name="securityGroups", type=List.class, parameters={String.class})
    private Output<List<String>> securityGroups;

    /**
     * @return A list of security groups (names; conflicts with `security_group_ids`).
     * 
     */
    public Output<List<String>> securityGroups() {
        return this.securityGroups;
    }
    /**
     * The instance size (`Tiny`, `Small`, `Medium`, `Large`, etc.)
     * 
     */
    @Export(name="size", type=String.class, parameters={})
    private Output</* @Nullable */ String> size;

    /**
     * @return The instance size (`Tiny`, `Small`, `Medium`, `Large`, etc.)
     * 
     */
    public Output<Optional<String>> size() {
        return Codegen.optional(this.size);
    }
    /**
     * The instance state (`Running` or `Stopped`; default: `Running`)
     * 
     */
    @Export(name="state", type=String.class, parameters={})
    private Output<String> state;

    /**
     * @return The instance state (`Running` or `Stopped`; default: `Running`)
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * A map of tags (key/value). To remove all tags, set `tags = {}`.
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> tags;

    /**
     * @return A map of tags (key/value). To remove all tags, set `tags = {}`.
     * 
     */
    public Output<Map<String,String>> tags() {
        return this.tags;
    }
    /**
     * The compute instance template (name). Only *featured* templates are available, if you want to reference *custom templates* use the `template_id` attribute instead.
     * 
     */
    @Export(name="template", type=String.class, parameters={})
    private Output<String> template;

    /**
     * @return The compute instance template (name). Only *featured* templates are available, if you want to reference *custom templates* use the `template_id` attribute instead.
     * 
     */
    public Output<String> template() {
        return this.template;
    }
    /**
     * The compute instance template (ID). Usage of the `exoscale.getComputeTemplate` data source is recommended.
     * 
     */
    @Export(name="templateId", type=String.class, parameters={})
    private Output<String> templateId;

    /**
     * @return The compute instance template (ID). Usage of the `exoscale.getComputeTemplate` data source is recommended.
     * 
     */
    public Output<String> templateId() {
        return this.templateId;
    }
    /**
     * cloud-init configuration (no need to base64-encode or gzip it as the provider will take care of it).
     * 
     */
    @Export(name="userData", type=String.class, parameters={})
    private Output</* @Nullable */ String> userData;

    /**
     * @return cloud-init configuration (no need to base64-encode or gzip it as the provider will take care of it).
     * 
     */
    public Output<Optional<String>> userData() {
        return Codegen.optional(this.userData);
    }
    /**
     * was the cloud-init configuration base64 encoded
     * 
     */
    @Export(name="userDataBase64", type=Boolean.class, parameters={})
    private Output<Boolean> userDataBase64;

    /**
     * @return was the cloud-init configuration base64 encoded
     * 
     */
    public Output<Boolean> userDataBase64() {
        return this.userDataBase64;
    }
    /**
     * The user to use to connect to the instance. If you&#39;ve referenced a *custom template* in the resource, use the `exoscale.getComputeTemplate` data source `username` attribute instead.
     * 
     * @deprecated
     * broken, use `compute_template` data source `username` attribute
     * 
     */
    @Deprecated /* broken, use `compute_template` data source `username` attribute */
    @Export(name="username", type=String.class, parameters={})
    private Output<String> username;

    /**
     * @return The user to use to connect to the instance. If you&#39;ve referenced a *custom template* in the resource, use the `exoscale.getComputeTemplate` data source `username` attribute instead.
     * 
     */
    public Output<String> username() {
        return this.username;
    }
    /**
     * The Exoscale Zone name.
     * 
     */
    @Export(name="zone", type=String.class, parameters={})
    private Output<String> zone;

    /**
     * @return The Exoscale Zone name.
     * 
     */
    public Output<String> zone() {
        return this.zone;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Compute(String name) {
        this(name, ComputeArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Compute(String name, ComputeArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Compute(String name, ComputeArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("exoscale:index/compute:Compute", name, args == null ? ComputeArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Compute(String name, Output<String> id, @Nullable ComputeState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("exoscale:index/compute:Compute", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "password"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Compute get(String name, Output<String> id, @Nullable ComputeState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Compute(name, id, state, options);
    }
}
