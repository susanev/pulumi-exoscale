// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumiverse.exoscale.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumiverse.exoscale.outputs.GetInstancePoolListPoolInstance;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetInstancePoolListPool {
    private List<String> affinityGroupIds;
    private String deployTargetId;
    private String description;
    private Integer diskSize;
    private List<String> elasticIpIds;
    private @Nullable String id;
    private String instancePrefix;
    private String instanceType;
    private List<GetInstancePoolListPoolInstance> instances;
    private Boolean ipv6;
    private String keyPair;
    private @Nullable Map<String,String> labels;
    private @Nullable String name;
    private List<String> networkIds;
    private List<String> securityGroupIds;
    private Integer size;
    private String state;
    private String templateId;
    private String userData;
    /**
     * @return The Exoscale [Zone][zone] name.
     * 
     */
    private String zone;

    private GetInstancePoolListPool() {}
    public List<String> affinityGroupIds() {
        return this.affinityGroupIds;
    }
    public String deployTargetId() {
        return this.deployTargetId;
    }
    public String description() {
        return this.description;
    }
    public Integer diskSize() {
        return this.diskSize;
    }
    public List<String> elasticIpIds() {
        return this.elasticIpIds;
    }
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public String instancePrefix() {
        return this.instancePrefix;
    }
    public String instanceType() {
        return this.instanceType;
    }
    public List<GetInstancePoolListPoolInstance> instances() {
        return this.instances;
    }
    public Boolean ipv6() {
        return this.ipv6;
    }
    public String keyPair() {
        return this.keyPair;
    }
    public Map<String,String> labels() {
        return this.labels == null ? Map.of() : this.labels;
    }
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public List<String> networkIds() {
        return this.networkIds;
    }
    public List<String> securityGroupIds() {
        return this.securityGroupIds;
    }
    public Integer size() {
        return this.size;
    }
    public String state() {
        return this.state;
    }
    public String templateId() {
        return this.templateId;
    }
    public String userData() {
        return this.userData;
    }
    /**
     * @return The Exoscale [Zone][zone] name.
     * 
     */
    public String zone() {
        return this.zone;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstancePoolListPool defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> affinityGroupIds;
        private String deployTargetId;
        private String description;
        private Integer diskSize;
        private List<String> elasticIpIds;
        private @Nullable String id;
        private String instancePrefix;
        private String instanceType;
        private List<GetInstancePoolListPoolInstance> instances;
        private Boolean ipv6;
        private String keyPair;
        private @Nullable Map<String,String> labels;
        private @Nullable String name;
        private List<String> networkIds;
        private List<String> securityGroupIds;
        private Integer size;
        private String state;
        private String templateId;
        private String userData;
        private String zone;
        public Builder() {}
        public Builder(GetInstancePoolListPool defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.affinityGroupIds = defaults.affinityGroupIds;
    	      this.deployTargetId = defaults.deployTargetId;
    	      this.description = defaults.description;
    	      this.diskSize = defaults.diskSize;
    	      this.elasticIpIds = defaults.elasticIpIds;
    	      this.id = defaults.id;
    	      this.instancePrefix = defaults.instancePrefix;
    	      this.instanceType = defaults.instanceType;
    	      this.instances = defaults.instances;
    	      this.ipv6 = defaults.ipv6;
    	      this.keyPair = defaults.keyPair;
    	      this.labels = defaults.labels;
    	      this.name = defaults.name;
    	      this.networkIds = defaults.networkIds;
    	      this.securityGroupIds = defaults.securityGroupIds;
    	      this.size = defaults.size;
    	      this.state = defaults.state;
    	      this.templateId = defaults.templateId;
    	      this.userData = defaults.userData;
    	      this.zone = defaults.zone;
        }

        @CustomType.Setter
        public Builder affinityGroupIds(List<String> affinityGroupIds) {
            this.affinityGroupIds = Objects.requireNonNull(affinityGroupIds);
            return this;
        }
        public Builder affinityGroupIds(String... affinityGroupIds) {
            return affinityGroupIds(List.of(affinityGroupIds));
        }
        @CustomType.Setter
        public Builder deployTargetId(String deployTargetId) {
            this.deployTargetId = Objects.requireNonNull(deployTargetId);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder diskSize(Integer diskSize) {
            this.diskSize = Objects.requireNonNull(diskSize);
            return this;
        }
        @CustomType.Setter
        public Builder elasticIpIds(List<String> elasticIpIds) {
            this.elasticIpIds = Objects.requireNonNull(elasticIpIds);
            return this;
        }
        public Builder elasticIpIds(String... elasticIpIds) {
            return elasticIpIds(List.of(elasticIpIds));
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder instancePrefix(String instancePrefix) {
            this.instancePrefix = Objects.requireNonNull(instancePrefix);
            return this;
        }
        @CustomType.Setter
        public Builder instanceType(String instanceType) {
            this.instanceType = Objects.requireNonNull(instanceType);
            return this;
        }
        @CustomType.Setter
        public Builder instances(List<GetInstancePoolListPoolInstance> instances) {
            this.instances = Objects.requireNonNull(instances);
            return this;
        }
        public Builder instances(GetInstancePoolListPoolInstance... instances) {
            return instances(List.of(instances));
        }
        @CustomType.Setter
        public Builder ipv6(Boolean ipv6) {
            this.ipv6 = Objects.requireNonNull(ipv6);
            return this;
        }
        @CustomType.Setter
        public Builder keyPair(String keyPair) {
            this.keyPair = Objects.requireNonNull(keyPair);
            return this;
        }
        @CustomType.Setter
        public Builder labels(@Nullable Map<String,String> labels) {
            this.labels = labels;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder networkIds(List<String> networkIds) {
            this.networkIds = Objects.requireNonNull(networkIds);
            return this;
        }
        public Builder networkIds(String... networkIds) {
            return networkIds(List.of(networkIds));
        }
        @CustomType.Setter
        public Builder securityGroupIds(List<String> securityGroupIds) {
            this.securityGroupIds = Objects.requireNonNull(securityGroupIds);
            return this;
        }
        public Builder securityGroupIds(String... securityGroupIds) {
            return securityGroupIds(List.of(securityGroupIds));
        }
        @CustomType.Setter
        public Builder size(Integer size) {
            this.size = Objects.requireNonNull(size);
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder templateId(String templateId) {
            this.templateId = Objects.requireNonNull(templateId);
            return this;
        }
        @CustomType.Setter
        public Builder userData(String userData) {
            this.userData = Objects.requireNonNull(userData);
            return this;
        }
        @CustomType.Setter
        public Builder zone(String zone) {
            this.zone = Objects.requireNonNull(zone);
            return this;
        }
        public GetInstancePoolListPool build() {
            final var o = new GetInstancePoolListPool();
            o.affinityGroupIds = affinityGroupIds;
            o.deployTargetId = deployTargetId;
            o.description = description;
            o.diskSize = diskSize;
            o.elasticIpIds = elasticIpIds;
            o.id = id;
            o.instancePrefix = instancePrefix;
            o.instanceType = instanceType;
            o.instances = instances;
            o.ipv6 = ipv6;
            o.keyPair = keyPair;
            o.labels = labels;
            o.name = name;
            o.networkIds = networkIds;
            o.securityGroupIds = securityGroupIds;
            o.size = size;
            o.state = state;
            o.templateId = templateId;
            o.userData = userData;
            o.zone = zone;
            return o;
        }
    }
}
