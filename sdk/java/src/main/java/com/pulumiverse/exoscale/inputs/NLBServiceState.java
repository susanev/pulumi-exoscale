// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumiverse.exoscale.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumiverse.exoscale.inputs.NLBServiceHealthcheckArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NLBServiceState extends com.pulumi.resources.ResourceArgs {

    public static final NLBServiceState Empty = new NLBServiceState();

    /**
     * A free-form text describing the NLB service.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return A free-form text describing the NLB service.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The service health checking configuration (may only bet set at creation time). Structure is documented below.
     * 
     */
    @Import(name="healthchecks")
    private @Nullable Output<List<NLBServiceHealthcheckArgs>> healthchecks;

    /**
     * @return The service health checking configuration (may only bet set at creation time). Structure is documented below.
     * 
     */
    public Optional<Output<List<NLBServiceHealthcheckArgs>>> healthchecks() {
        return Optional.ofNullable(this.healthchecks);
    }

    /**
     * The exoscale.InstancePool (ID) to forward traffic to.
     * 
     */
    @Import(name="instancePoolId")
    private @Nullable Output<String> instancePoolId;

    /**
     * @return The exoscale.InstancePool (ID) to forward traffic to.
     * 
     */
    public Optional<Output<String>> instancePoolId() {
        return Optional.ofNullable(this.instancePoolId);
    }

    /**
     * The NLB service name.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The NLB service name.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The parent exoscale.NLB ID.
     * 
     */
    @Import(name="nlbId")
    private @Nullable Output<String> nlbId;

    /**
     * @return The parent exoscale.NLB ID.
     * 
     */
    public Optional<Output<String>> nlbId() {
        return Optional.ofNullable(this.nlbId);
    }

    /**
     * The healthcheck port.
     * 
     */
    @Import(name="port")
    private @Nullable Output<Integer> port;

    /**
     * @return The healthcheck port.
     * 
     */
    public Optional<Output<Integer>> port() {
        return Optional.ofNullable(this.port);
    }

    /**
     * The protocol (`tcp`|`udp`; default: `tcp`).
     * 
     */
    @Import(name="protocol")
    private @Nullable Output<String> protocol;

    /**
     * @return The protocol (`tcp`|`udp`; default: `tcp`).
     * 
     */
    public Optional<Output<String>> protocol() {
        return Optional.ofNullable(this.protocol);
    }

    @Import(name="state")
    private @Nullable Output<String> state;

    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * The strategy (`round-robin`|`source-hash`; default: `round-robin`).
     * 
     */
    @Import(name="strategy")
    private @Nullable Output<String> strategy;

    /**
     * @return The strategy (`round-robin`|`source-hash`; default: `round-robin`).
     * 
     */
    public Optional<Output<String>> strategy() {
        return Optional.ofNullable(this.strategy);
    }

    /**
     * The (TCP/UDP) port to forward traffic to (on target instance pool members).
     * 
     */
    @Import(name="targetPort")
    private @Nullable Output<Integer> targetPort;

    /**
     * @return The (TCP/UDP) port to forward traffic to (on target instance pool members).
     * 
     */
    public Optional<Output<Integer>> targetPort() {
        return Optional.ofNullable(this.targetPort);
    }

    /**
     * The Exoscale [Zone][zone] name.
     * 
     */
    @Import(name="zone")
    private @Nullable Output<String> zone;

    /**
     * @return The Exoscale [Zone][zone] name.
     * 
     */
    public Optional<Output<String>> zone() {
        return Optional.ofNullable(this.zone);
    }

    private NLBServiceState() {}

    private NLBServiceState(NLBServiceState $) {
        this.description = $.description;
        this.healthchecks = $.healthchecks;
        this.instancePoolId = $.instancePoolId;
        this.name = $.name;
        this.nlbId = $.nlbId;
        this.port = $.port;
        this.protocol = $.protocol;
        this.state = $.state;
        this.strategy = $.strategy;
        this.targetPort = $.targetPort;
        this.zone = $.zone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NLBServiceState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NLBServiceState $;

        public Builder() {
            $ = new NLBServiceState();
        }

        public Builder(NLBServiceState defaults) {
            $ = new NLBServiceState(Objects.requireNonNull(defaults));
        }

        /**
         * @param description A free-form text describing the NLB service.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description A free-form text describing the NLB service.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param healthchecks The service health checking configuration (may only bet set at creation time). Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder healthchecks(@Nullable Output<List<NLBServiceHealthcheckArgs>> healthchecks) {
            $.healthchecks = healthchecks;
            return this;
        }

        /**
         * @param healthchecks The service health checking configuration (may only bet set at creation time). Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder healthchecks(List<NLBServiceHealthcheckArgs> healthchecks) {
            return healthchecks(Output.of(healthchecks));
        }

        /**
         * @param healthchecks The service health checking configuration (may only bet set at creation time). Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder healthchecks(NLBServiceHealthcheckArgs... healthchecks) {
            return healthchecks(List.of(healthchecks));
        }

        /**
         * @param instancePoolId The exoscale.InstancePool (ID) to forward traffic to.
         * 
         * @return builder
         * 
         */
        public Builder instancePoolId(@Nullable Output<String> instancePoolId) {
            $.instancePoolId = instancePoolId;
            return this;
        }

        /**
         * @param instancePoolId The exoscale.InstancePool (ID) to forward traffic to.
         * 
         * @return builder
         * 
         */
        public Builder instancePoolId(String instancePoolId) {
            return instancePoolId(Output.of(instancePoolId));
        }

        /**
         * @param name The NLB service name.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The NLB service name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param nlbId The parent exoscale.NLB ID.
         * 
         * @return builder
         * 
         */
        public Builder nlbId(@Nullable Output<String> nlbId) {
            $.nlbId = nlbId;
            return this;
        }

        /**
         * @param nlbId The parent exoscale.NLB ID.
         * 
         * @return builder
         * 
         */
        public Builder nlbId(String nlbId) {
            return nlbId(Output.of(nlbId));
        }

        /**
         * @param port The healthcheck port.
         * 
         * @return builder
         * 
         */
        public Builder port(@Nullable Output<Integer> port) {
            $.port = port;
            return this;
        }

        /**
         * @param port The healthcheck port.
         * 
         * @return builder
         * 
         */
        public Builder port(Integer port) {
            return port(Output.of(port));
        }

        /**
         * @param protocol The protocol (`tcp`|`udp`; default: `tcp`).
         * 
         * @return builder
         * 
         */
        public Builder protocol(@Nullable Output<String> protocol) {
            $.protocol = protocol;
            return this;
        }

        /**
         * @param protocol The protocol (`tcp`|`udp`; default: `tcp`).
         * 
         * @return builder
         * 
         */
        public Builder protocol(String protocol) {
            return protocol(Output.of(protocol));
        }

        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param strategy The strategy (`round-robin`|`source-hash`; default: `round-robin`).
         * 
         * @return builder
         * 
         */
        public Builder strategy(@Nullable Output<String> strategy) {
            $.strategy = strategy;
            return this;
        }

        /**
         * @param strategy The strategy (`round-robin`|`source-hash`; default: `round-robin`).
         * 
         * @return builder
         * 
         */
        public Builder strategy(String strategy) {
            return strategy(Output.of(strategy));
        }

        /**
         * @param targetPort The (TCP/UDP) port to forward traffic to (on target instance pool members).
         * 
         * @return builder
         * 
         */
        public Builder targetPort(@Nullable Output<Integer> targetPort) {
            $.targetPort = targetPort;
            return this;
        }

        /**
         * @param targetPort The (TCP/UDP) port to forward traffic to (on target instance pool members).
         * 
         * @return builder
         * 
         */
        public Builder targetPort(Integer targetPort) {
            return targetPort(Output.of(targetPort));
        }

        /**
         * @param zone The Exoscale [Zone][zone] name.
         * 
         * @return builder
         * 
         */
        public Builder zone(@Nullable Output<String> zone) {
            $.zone = zone;
            return this;
        }

        /**
         * @param zone The Exoscale [Zone][zone] name.
         * 
         * @return builder
         * 
         */
        public Builder zone(String zone) {
            return zone(Output.of(zone));
        }

        public NLBServiceState build() {
            return $;
        }
    }

}
