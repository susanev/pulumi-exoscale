// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumiverse.exoscale.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumiverse.exoscale.inputs.GetDomainRecordFilterArgs;
import java.lang.String;
import java.util.Objects;


public final class GetDomainRecordArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetDomainRecordArgs Empty = new GetDomainRecordArgs();

    /**
     * The exoscale.Domain name to match.
     * 
     */
    @Import(name="domain", required=true)
    private Output<String> domain;

    /**
     * @return The exoscale.Domain name to match.
     * 
     */
    public Output<String> domain() {
        return this.domain;
    }

    /**
     * Filter to apply when looking up domain records. Structure is documented below.
     * 
     */
    @Import(name="filter", required=true)
    private Output<GetDomainRecordFilterArgs> filter;

    /**
     * @return Filter to apply when looking up domain records. Structure is documented below.
     * 
     */
    public Output<GetDomainRecordFilterArgs> filter() {
        return this.filter;
    }

    private GetDomainRecordArgs() {}

    private GetDomainRecordArgs(GetDomainRecordArgs $) {
        this.domain = $.domain;
        this.filter = $.filter;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDomainRecordArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDomainRecordArgs $;

        public Builder() {
            $ = new GetDomainRecordArgs();
        }

        public Builder(GetDomainRecordArgs defaults) {
            $ = new GetDomainRecordArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param domain The exoscale.Domain name to match.
         * 
         * @return builder
         * 
         */
        public Builder domain(Output<String> domain) {
            $.domain = domain;
            return this;
        }

        /**
         * @param domain The exoscale.Domain name to match.
         * 
         * @return builder
         * 
         */
        public Builder domain(String domain) {
            return domain(Output.of(domain));
        }

        /**
         * @param filter Filter to apply when looking up domain records. Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder filter(Output<GetDomainRecordFilterArgs> filter) {
            $.filter = filter;
            return this;
        }

        /**
         * @param filter Filter to apply when looking up domain records. Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder filter(GetDomainRecordFilterArgs filter) {
            return filter(Output.of(filter));
        }

        public GetDomainRecordArgs build() {
            $.domain = Objects.requireNonNull($.domain, "expected parameter 'domain' to be non-null");
            $.filter = Objects.requireNonNull($.filter, "expected parameter 'filter' to be non-null");
            return $;
        }
    }

}
