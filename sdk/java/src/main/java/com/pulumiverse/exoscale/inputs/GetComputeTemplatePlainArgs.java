// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumiverse.exoscale.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetComputeTemplatePlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetComputeTemplatePlainArgs Empty = new GetComputeTemplatePlainArgs();

    /**
     * A template category filter (default: `featured`); among:
     * 
     */
    @Import(name="filter")
    private @Nullable String filter;

    /**
     * @return A template category filter (default: `featured`); among:
     * 
     */
    public Optional<String> filter() {
        return Optional.ofNullable(this.filter);
    }

    /**
     * The compute instance template ID to match (conflicts with `name`).
     * 
     */
    @Import(name="id")
    private @Nullable String id;

    /**
     * @return The compute instance template ID to match (conflicts with `name`).
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * The template name to match (conflicts with `id`).
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    /**
     * @return The template name to match (conflicts with `id`).
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The Exoscale [Zone][zone] name.
     * 
     */
    @Import(name="zone", required=true)
    private String zone;

    /**
     * @return The Exoscale [Zone][zone] name.
     * 
     */
    public String zone() {
        return this.zone;
    }

    private GetComputeTemplatePlainArgs() {}

    private GetComputeTemplatePlainArgs(GetComputeTemplatePlainArgs $) {
        this.filter = $.filter;
        this.id = $.id;
        this.name = $.name;
        this.zone = $.zone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetComputeTemplatePlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetComputeTemplatePlainArgs $;

        public Builder() {
            $ = new GetComputeTemplatePlainArgs();
        }

        public Builder(GetComputeTemplatePlainArgs defaults) {
            $ = new GetComputeTemplatePlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param filter A template category filter (default: `featured`); among:
         * 
         * @return builder
         * 
         */
        public Builder filter(@Nullable String filter) {
            $.filter = filter;
            return this;
        }

        /**
         * @param id The compute instance template ID to match (conflicts with `name`).
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable String id) {
            $.id = id;
            return this;
        }

        /**
         * @param name The template name to match (conflicts with `id`).
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        /**
         * @param zone The Exoscale [Zone][zone] name.
         * 
         * @return builder
         * 
         */
        public Builder zone(String zone) {
            $.zone = zone;
            return this;
        }

        public GetComputeTemplatePlainArgs build() {
            $.zone = Objects.requireNonNull($.zone, "expected parameter 'zone' to be non-null");
            return $;
        }
    }

}
