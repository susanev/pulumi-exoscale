// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumiverse.exoscale.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPrivateNetworkResult {
    /**
     * @return The private network description.
     * 
     */
    private @Nullable String description;
    private String endIp;
    private @Nullable String id;
    private @Nullable String name;
    /**
     * @return The network mask defining the IPv4 network allowed for static leases.
     * * `start_ip`/`end_ip` - The first/last IPv4 addresses used by the DHCP service for dynamic leases.
     * 
     */
    private String netmask;
    private String startIp;
    private String zone;

    private GetPrivateNetworkResult() {}
    /**
     * @return The private network description.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    public String endIp() {
        return this.endIp;
    }
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return The network mask defining the IPv4 network allowed for static leases.
     * * `start_ip`/`end_ip` - The first/last IPv4 addresses used by the DHCP service for dynamic leases.
     * 
     */
    public String netmask() {
        return this.netmask;
    }
    public String startIp() {
        return this.startIp;
    }
    public String zone() {
        return this.zone;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPrivateNetworkResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String description;
        private String endIp;
        private @Nullable String id;
        private @Nullable String name;
        private String netmask;
        private String startIp;
        private String zone;
        public Builder() {}
        public Builder(GetPrivateNetworkResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.endIp = defaults.endIp;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.netmask = defaults.netmask;
    	      this.startIp = defaults.startIp;
    	      this.zone = defaults.zone;
        }

        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder endIp(String endIp) {
            this.endIp = Objects.requireNonNull(endIp);
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder netmask(String netmask) {
            this.netmask = Objects.requireNonNull(netmask);
            return this;
        }
        @CustomType.Setter
        public Builder startIp(String startIp) {
            this.startIp = Objects.requireNonNull(startIp);
            return this;
        }
        @CustomType.Setter
        public Builder zone(String zone) {
            this.zone = Objects.requireNonNull(zone);
            return this;
        }
        public GetPrivateNetworkResult build() {
            final var o = new GetPrivateNetworkResult();
            o.description = description;
            o.endIp = endIp;
            o.id = id;
            o.name = name;
            o.netmask = netmask;
            o.startIp = startIp;
            o.zone = zone;
            return o;
        }
    }
}
