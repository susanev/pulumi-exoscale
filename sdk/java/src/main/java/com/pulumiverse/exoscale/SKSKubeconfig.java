// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumiverse.exoscale;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumiverse.exoscale.SKSKubeconfigArgs;
import com.pulumiverse.exoscale.Utilities;
import com.pulumiverse.exoscale.inputs.SKSKubeconfigState;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="exoscale:index/sKSKubeconfig:SKSKubeconfig")
public class SKSKubeconfig extends com.pulumi.resources.CustomResource {
    /**
     * The parent exoscale.SKSCluster ID.
     * 
     */
    @Export(name="clusterId", type=String.class, parameters={})
    private Output<String> clusterId;

    /**
     * @return The parent exoscale.SKSCluster ID.
     * 
     */
    public Output<String> clusterId() {
        return this.clusterId;
    }
    @Export(name="earlyRenewalSeconds", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> earlyRenewalSeconds;

    public Output<Optional<Integer>> earlyRenewalSeconds() {
        return Codegen.optional(this.earlyRenewalSeconds);
    }
    /**
     * Group names in the generated Kubeconfig. The certificate present in the Kubeconfig will have these roles set in the Organization field.
     * 
     */
    @Export(name="groups", type=List.class, parameters={String.class})
    private Output<List<String>> groups;

    /**
     * @return Group names in the generated Kubeconfig. The certificate present in the Kubeconfig will have these roles set in the Organization field.
     * 
     */
    public Output<List<String>> groups() {
        return this.groups;
    }
    /**
     * The generated Kubeconfig (YAML content).
     * 
     */
    @Export(name="kubeconfig", type=String.class, parameters={})
    private Output<String> kubeconfig;

    /**
     * @return The generated Kubeconfig (YAML content).
     * 
     */
    public Output<String> kubeconfig() {
        return this.kubeconfig;
    }
    @Export(name="readyForRenewal", type=Boolean.class, parameters={})
    private Output<Boolean> readyForRenewal;

    public Output<Boolean> readyForRenewal() {
        return this.readyForRenewal;
    }
    /**
     * The Time-to-Live of the Kubeconfig, after which it will expire / become invalid (seconds; default: 2592000 = 30 days).
     * 
     */
    @Export(name="ttlSeconds", type=Double.class, parameters={})
    private Output</* @Nullable */ Double> ttlSeconds;

    /**
     * @return The Time-to-Live of the Kubeconfig, after which it will expire / become invalid (seconds; default: 2592000 = 30 days).
     * 
     */
    public Output<Optional<Double>> ttlSeconds() {
        return Codegen.optional(this.ttlSeconds);
    }
    /**
     * User name in the generated Kubeconfig. The certificate present in the Kubeconfig will also have this name set for the CN field.
     * 
     */
    @Export(name="user", type=String.class, parameters={})
    private Output<String> user;

    /**
     * @return User name in the generated Kubeconfig. The certificate present in the Kubeconfig will also have this name set for the CN field.
     * 
     */
    public Output<String> user() {
        return this.user;
    }
    /**
     * The Exoscale [Zone][zone] name.
     * 
     */
    @Export(name="zone", type=String.class, parameters={})
    private Output<String> zone;

    /**
     * @return The Exoscale [Zone][zone] name.
     * 
     */
    public Output<String> zone() {
        return this.zone;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SKSKubeconfig(String name) {
        this(name, SKSKubeconfigArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SKSKubeconfig(String name, SKSKubeconfigArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SKSKubeconfig(String name, SKSKubeconfigArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("exoscale:index/sKSKubeconfig:SKSKubeconfig", name, args == null ? SKSKubeconfigArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private SKSKubeconfig(String name, Output<String> id, @Nullable SKSKubeconfigState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("exoscale:index/sKSKubeconfig:SKSKubeconfig", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "kubeconfig"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SKSKubeconfig get(String name, Output<String> id, @Nullable SKSKubeconfigState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new SKSKubeconfig(name, id, state, options);
    }
}
