// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumiverse.exoscale.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumiverse.exoscale.inputs.ElasticIPHealthcheckArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ElasticIPState extends com.pulumi.resources.ResourceArgs {

    public static final ElasticIPState Empty = new ElasticIPState();

    /**
     * The Elastic IP (EIP) address family (`inet4` or `inet6`; default: `inet4`).
     * 
     */
    @Import(name="addressFamily")
    private @Nullable Output<String> addressFamily;

    /**
     * @return The Elastic IP (EIP) address family (`inet4` or `inet6`; default: `inet4`).
     * 
     */
    public Optional<Output<String>> addressFamily() {
        return Optional.ofNullable(this.addressFamily);
    }

    /**
     * The Elastic IP (EIP) CIDR.
     * 
     */
    @Import(name="cidr")
    private @Nullable Output<String> cidr;

    /**
     * @return The Elastic IP (EIP) CIDR.
     * 
     */
    public Optional<Output<String>> cidr() {
        return Optional.ofNullable(this.cidr);
    }

    /**
     * A free-form text describing the Elastic IP (EIP).
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return A free-form text describing the Elastic IP (EIP).
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Healthcheck configuration for *managed* EIPs. Structure is documented below.
     * 
     */
    @Import(name="healthcheck")
    private @Nullable Output<ElasticIPHealthcheckArgs> healthcheck;

    /**
     * @return Healthcheck configuration for *managed* EIPs. Structure is documented below.
     * 
     */
    public Optional<Output<ElasticIPHealthcheckArgs>> healthcheck() {
        return Optional.ofNullable(this.healthcheck);
    }

    /**
     * The Elastic IP (EIP) IPv4 or IPv6 address.
     * 
     */
    @Import(name="ipAddress")
    private @Nullable Output<String> ipAddress;

    /**
     * @return The Elastic IP (EIP) IPv4 or IPv6 address.
     * 
     */
    public Optional<Output<String>> ipAddress() {
        return Optional.ofNullable(this.ipAddress);
    }

    /**
     * The Exoscale [Zone][zone] name.
     * 
     */
    @Import(name="zone")
    private @Nullable Output<String> zone;

    /**
     * @return The Exoscale [Zone][zone] name.
     * 
     */
    public Optional<Output<String>> zone() {
        return Optional.ofNullable(this.zone);
    }

    private ElasticIPState() {}

    private ElasticIPState(ElasticIPState $) {
        this.addressFamily = $.addressFamily;
        this.cidr = $.cidr;
        this.description = $.description;
        this.healthcheck = $.healthcheck;
        this.ipAddress = $.ipAddress;
        this.zone = $.zone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ElasticIPState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ElasticIPState $;

        public Builder() {
            $ = new ElasticIPState();
        }

        public Builder(ElasticIPState defaults) {
            $ = new ElasticIPState(Objects.requireNonNull(defaults));
        }

        /**
         * @param addressFamily The Elastic IP (EIP) address family (`inet4` or `inet6`; default: `inet4`).
         * 
         * @return builder
         * 
         */
        public Builder addressFamily(@Nullable Output<String> addressFamily) {
            $.addressFamily = addressFamily;
            return this;
        }

        /**
         * @param addressFamily The Elastic IP (EIP) address family (`inet4` or `inet6`; default: `inet4`).
         * 
         * @return builder
         * 
         */
        public Builder addressFamily(String addressFamily) {
            return addressFamily(Output.of(addressFamily));
        }

        /**
         * @param cidr The Elastic IP (EIP) CIDR.
         * 
         * @return builder
         * 
         */
        public Builder cidr(@Nullable Output<String> cidr) {
            $.cidr = cidr;
            return this;
        }

        /**
         * @param cidr The Elastic IP (EIP) CIDR.
         * 
         * @return builder
         * 
         */
        public Builder cidr(String cidr) {
            return cidr(Output.of(cidr));
        }

        /**
         * @param description A free-form text describing the Elastic IP (EIP).
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description A free-form text describing the Elastic IP (EIP).
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param healthcheck Healthcheck configuration for *managed* EIPs. Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder healthcheck(@Nullable Output<ElasticIPHealthcheckArgs> healthcheck) {
            $.healthcheck = healthcheck;
            return this;
        }

        /**
         * @param healthcheck Healthcheck configuration for *managed* EIPs. Structure is documented below.
         * 
         * @return builder
         * 
         */
        public Builder healthcheck(ElasticIPHealthcheckArgs healthcheck) {
            return healthcheck(Output.of(healthcheck));
        }

        /**
         * @param ipAddress The Elastic IP (EIP) IPv4 or IPv6 address.
         * 
         * @return builder
         * 
         */
        public Builder ipAddress(@Nullable Output<String> ipAddress) {
            $.ipAddress = ipAddress;
            return this;
        }

        /**
         * @param ipAddress The Elastic IP (EIP) IPv4 or IPv6 address.
         * 
         * @return builder
         * 
         */
        public Builder ipAddress(String ipAddress) {
            return ipAddress(Output.of(ipAddress));
        }

        /**
         * @param zone The Exoscale [Zone][zone] name.
         * 
         * @return builder
         * 
         */
        public Builder zone(@Nullable Output<String> zone) {
            $.zone = zone;
            return this;
        }

        /**
         * @param zone The Exoscale [Zone][zone] name.
         * 
         * @return builder
         * 
         */
        public Builder zone(String zone) {
            return zone(Output.of(zone));
        }

        public ElasticIPState build() {
            return $;
        }
    }

}
