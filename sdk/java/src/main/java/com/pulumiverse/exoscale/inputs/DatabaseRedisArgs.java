// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumiverse.exoscale.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DatabaseRedisArgs extends com.pulumi.resources.ResourceArgs {

    public static final DatabaseRedisArgs Empty = new DatabaseRedisArgs();

    /**
     * A list of CIDR blocks to allow incoming connections from.
     * 
     */
    @Import(name="ipFilters")
    private @Nullable Output<List<String>> ipFilters;

    /**
     * @return A list of CIDR blocks to allow incoming connections from.
     * 
     */
    public Optional<Output<List<String>>> ipFilters() {
        return Optional.ofNullable(this.ipFilters);
    }

    /**
     * Redis configuration settings in JSON format (`exo dbaas type show redis --settings=redis` for reference).
     * 
     */
    @Import(name="redisSettings")
    private @Nullable Output<String> redisSettings;

    /**
     * @return Redis configuration settings in JSON format (`exo dbaas type show redis --settings=redis` for reference).
     * 
     */
    public Optional<Output<String>> redisSettings() {
        return Optional.ofNullable(this.redisSettings);
    }

    private DatabaseRedisArgs() {}

    private DatabaseRedisArgs(DatabaseRedisArgs $) {
        this.ipFilters = $.ipFilters;
        this.redisSettings = $.redisSettings;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DatabaseRedisArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatabaseRedisArgs $;

        public Builder() {
            $ = new DatabaseRedisArgs();
        }

        public Builder(DatabaseRedisArgs defaults) {
            $ = new DatabaseRedisArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ipFilters A list of CIDR blocks to allow incoming connections from.
         * 
         * @return builder
         * 
         */
        public Builder ipFilters(@Nullable Output<List<String>> ipFilters) {
            $.ipFilters = ipFilters;
            return this;
        }

        /**
         * @param ipFilters A list of CIDR blocks to allow incoming connections from.
         * 
         * @return builder
         * 
         */
        public Builder ipFilters(List<String> ipFilters) {
            return ipFilters(Output.of(ipFilters));
        }

        /**
         * @param ipFilters A list of CIDR blocks to allow incoming connections from.
         * 
         * @return builder
         * 
         */
        public Builder ipFilters(String... ipFilters) {
            return ipFilters(List.of(ipFilters));
        }

        /**
         * @param redisSettings Redis configuration settings in JSON format (`exo dbaas type show redis --settings=redis` for reference).
         * 
         * @return builder
         * 
         */
        public Builder redisSettings(@Nullable Output<String> redisSettings) {
            $.redisSettings = redisSettings;
            return this;
        }

        /**
         * @param redisSettings Redis configuration settings in JSON format (`exo dbaas type show redis --settings=redis` for reference).
         * 
         * @return builder
         * 
         */
        public Builder redisSettings(String redisSettings) {
            return redisSettings(Output.of(redisSettings));
        }

        public DatabaseRedisArgs build() {
            return $;
        }
    }

}
