// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumiverse.exoscale.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DatabaseOpensearchIndexPatternArgs extends com.pulumi.resources.ResourceArgs {

    public static final DatabaseOpensearchIndexPatternArgs Empty = new DatabaseOpensearchIndexPatternArgs();

    /**
     * Maximum number of indexes to keep before deleting the oldest one (Minimum value is `0`)
     * * `dashboards`
     * 
     */
    @Import(name="maxIndexCount")
    private @Nullable Output<Integer> maxIndexCount;

    /**
     * @return Maximum number of indexes to keep before deleting the oldest one (Minimum value is `0`)
     * * `dashboards`
     * 
     */
    public Optional<Output<Integer>> maxIndexCount() {
        return Optional.ofNullable(this.maxIndexCount);
    }

    /**
     * fnmatch pattern
     * 
     */
    @Import(name="pattern")
    private @Nullable Output<String> pattern;

    /**
     * @return fnmatch pattern
     * 
     */
    public Optional<Output<String>> pattern() {
        return Optional.ofNullable(this.pattern);
    }

    /**
     * `alphabetical` or `creation_date`.
     * 
     */
    @Import(name="sortingAlgorithm")
    private @Nullable Output<String> sortingAlgorithm;

    /**
     * @return `alphabetical` or `creation_date`.
     * 
     */
    public Optional<Output<String>> sortingAlgorithm() {
        return Optional.ofNullable(this.sortingAlgorithm);
    }

    private DatabaseOpensearchIndexPatternArgs() {}

    private DatabaseOpensearchIndexPatternArgs(DatabaseOpensearchIndexPatternArgs $) {
        this.maxIndexCount = $.maxIndexCount;
        this.pattern = $.pattern;
        this.sortingAlgorithm = $.sortingAlgorithm;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DatabaseOpensearchIndexPatternArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatabaseOpensearchIndexPatternArgs $;

        public Builder() {
            $ = new DatabaseOpensearchIndexPatternArgs();
        }

        public Builder(DatabaseOpensearchIndexPatternArgs defaults) {
            $ = new DatabaseOpensearchIndexPatternArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param maxIndexCount Maximum number of indexes to keep before deleting the oldest one (Minimum value is `0`)
         * * `dashboards`
         * 
         * @return builder
         * 
         */
        public Builder maxIndexCount(@Nullable Output<Integer> maxIndexCount) {
            $.maxIndexCount = maxIndexCount;
            return this;
        }

        /**
         * @param maxIndexCount Maximum number of indexes to keep before deleting the oldest one (Minimum value is `0`)
         * * `dashboards`
         * 
         * @return builder
         * 
         */
        public Builder maxIndexCount(Integer maxIndexCount) {
            return maxIndexCount(Output.of(maxIndexCount));
        }

        /**
         * @param pattern fnmatch pattern
         * 
         * @return builder
         * 
         */
        public Builder pattern(@Nullable Output<String> pattern) {
            $.pattern = pattern;
            return this;
        }

        /**
         * @param pattern fnmatch pattern
         * 
         * @return builder
         * 
         */
        public Builder pattern(String pattern) {
            return pattern(Output.of(pattern));
        }

        /**
         * @param sortingAlgorithm `alphabetical` or `creation_date`.
         * 
         * @return builder
         * 
         */
        public Builder sortingAlgorithm(@Nullable Output<String> sortingAlgorithm) {
            $.sortingAlgorithm = sortingAlgorithm;
            return this;
        }

        /**
         * @param sortingAlgorithm `alphabetical` or `creation_date`.
         * 
         * @return builder
         * 
         */
        public Builder sortingAlgorithm(String sortingAlgorithm) {
            return sortingAlgorithm(Output.of(sortingAlgorithm));
        }

        public DatabaseOpensearchIndexPatternArgs build() {
            return $;
        }
    }

}
