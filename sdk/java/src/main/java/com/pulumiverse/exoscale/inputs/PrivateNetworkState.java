// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumiverse.exoscale.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PrivateNetworkState extends com.pulumi.resources.ResourceArgs {

    public static final PrivateNetworkState Empty = new PrivateNetworkState();

    /**
     * A free-form text describing the network.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return A free-form text describing the network.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="endIp")
    private @Nullable Output<String> endIp;

    public Optional<Output<String>> endIp() {
        return Optional.ofNullable(this.endIp);
    }

    /**
     * The private network name.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The private network name.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The network mask defining the IPv4 network allowed for static leases.
     * * `start_ip`/`end_ip` - (Required) The first/last IPv4 addresses used by the DHCP service for dynamic leases.
     * 
     */
    @Import(name="netmask")
    private @Nullable Output<String> netmask;

    /**
     * @return The network mask defining the IPv4 network allowed for static leases.
     * * `start_ip`/`end_ip` - (Required) The first/last IPv4 addresses used by the DHCP service for dynamic leases.
     * 
     */
    public Optional<Output<String>> netmask() {
        return Optional.ofNullable(this.netmask);
    }

    @Import(name="startIp")
    private @Nullable Output<String> startIp;

    public Optional<Output<String>> startIp() {
        return Optional.ofNullable(this.startIp);
    }

    /**
     * The Exoscale [Zone][zone] name.
     * 
     */
    @Import(name="zone")
    private @Nullable Output<String> zone;

    /**
     * @return The Exoscale [Zone][zone] name.
     * 
     */
    public Optional<Output<String>> zone() {
        return Optional.ofNullable(this.zone);
    }

    private PrivateNetworkState() {}

    private PrivateNetworkState(PrivateNetworkState $) {
        this.description = $.description;
        this.endIp = $.endIp;
        this.name = $.name;
        this.netmask = $.netmask;
        this.startIp = $.startIp;
        this.zone = $.zone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PrivateNetworkState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PrivateNetworkState $;

        public Builder() {
            $ = new PrivateNetworkState();
        }

        public Builder(PrivateNetworkState defaults) {
            $ = new PrivateNetworkState(Objects.requireNonNull(defaults));
        }

        /**
         * @param description A free-form text describing the network.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description A free-form text describing the network.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder endIp(@Nullable Output<String> endIp) {
            $.endIp = endIp;
            return this;
        }

        public Builder endIp(String endIp) {
            return endIp(Output.of(endIp));
        }

        /**
         * @param name The private network name.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The private network name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param netmask The network mask defining the IPv4 network allowed for static leases.
         * * `start_ip`/`end_ip` - (Required) The first/last IPv4 addresses used by the DHCP service for dynamic leases.
         * 
         * @return builder
         * 
         */
        public Builder netmask(@Nullable Output<String> netmask) {
            $.netmask = netmask;
            return this;
        }

        /**
         * @param netmask The network mask defining the IPv4 network allowed for static leases.
         * * `start_ip`/`end_ip` - (Required) The first/last IPv4 addresses used by the DHCP service for dynamic leases.
         * 
         * @return builder
         * 
         */
        public Builder netmask(String netmask) {
            return netmask(Output.of(netmask));
        }

        public Builder startIp(@Nullable Output<String> startIp) {
            $.startIp = startIp;
            return this;
        }

        public Builder startIp(String startIp) {
            return startIp(Output.of(startIp));
        }

        /**
         * @param zone The Exoscale [Zone][zone] name.
         * 
         * @return builder
         * 
         */
        public Builder zone(@Nullable Output<String> zone) {
            $.zone = zone;
            return this;
        }

        /**
         * @param zone The Exoscale [Zone][zone] name.
         * 
         * @return builder
         * 
         */
        public Builder zone(String zone) {
            return zone(Output.of(zone));
        }

        public PrivateNetworkState build() {
            return $;
        }
    }

}
